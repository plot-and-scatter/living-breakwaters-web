{"version":3,"sources":["webpack:///./src/components/Strategies/StrategyCard.tsx","webpack:///./src/components/Strategies/StrategyFilter.tsx","webpack:///./src/pages/strategies.tsx","webpack:///./src/components/Layout/Title.tsx","webpack:///./src/components/Layout/Header.tsx"],"names":["StrategyCard","strategy","strategyType","frontmatter","strategyTypes","color","colorForStrategy","className","to","fields","slug","style","title","excerpt","StrategyFilter","checkboxCallback","filters","map","key","type","id","value","onChange","defaultChecked","includes","htmlFor","labelName","pageQuery","Strategies","props","data","strategies","allMarkdownRemark","edges","useState","setFilters","filteredStrategies","filter","strategyNode","node","useCallback","event","newFilters","target","checked","push","indexOfItem","indexOf","splice","useEffect","console","log","siteTitle","site","siteMetadata","Layout","location","SEO","Header","Title","headingGroup","index","children"],"mappings":"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","file":"component---src-pages-strategies-tsx-76fa703d3786ebb5f60f.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport { colorForStrategy } from '../../pages/strategies'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCard.scss'\n\ninterface Props {\n  strategy: FixTypeLater\n}\n\nconst StrategyCard = ({ strategy }: Props): JSX.Element => {\n  const strategyType = strategy.frontmatter.strategyTypes\n  const color = colorForStrategy(strategyType)\n  return (\n    <div className={`StrategyCard card border-${color}`}>\n      <div className={`d-flex card-header bg-${color}`}>\n        <Link to={strategy.fields.slug} style={{ color: 'white' }}>\n          <h5 className=\"mb-0\">{strategy.frontmatter.title}</h5>\n          <h6 className=\"mb-0\">\n            <small>{strategyType}</small>\n          </h6>\n        </Link>\n      </div>\n      <div className=\"card-body\">\n        <p>{strategy.frontmatter.excerpt}</p>\n        <p className=\"mb-0 text-right\">\n          <Link\n            to={strategy.fields.slug}\n            className={`btn btn-sm btn-outline-${color}`}\n          >\n            Learn more &rarr;\n          </Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyCard\n","import { colorForStrategy, strategyTypes } from '../../pages/strategies'\nimport React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  checkboxCallback: (event: FixTypeLater) => void\n  filters: FixTypeLater[]\n}\n\nconst StrategyFilter = ({ checkboxCallback, filters }: Props): JSX.Element => {\n  return (\n    <div className=\"StrategyFilter col-6 text-right\">\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <h5 className=\"text-muted mr-3 mb-0\">Show strategies:</h5>\n        {strategyTypes.map((strategyType) => {\n          const color = colorForStrategy(strategyType)\n          return (\n            <div\n              key={strategyType}\n              className={`py-1 px-2 form-check form-check-inline border border-${color} text-${color}`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id={`InlineCheckbox-${strategyType}`}\n                value={strategyType}\n                onChange={checkboxCallback}\n                defaultChecked={filters.includes(strategyType)}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor={`InlineCheckbox-${strategyType}`}\n              >\n                {strategyType}\n              </label>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyFilter\n","import { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Header from '../components/Layout/Header'\nimport Layout from '../components/Layout/Layout'\nimport Title from '../components/Layout/Title'\nimport SEO from '../components/SEO'\nimport StrategyCard from '../components/Strategies/StrategyCard'\nimport StrategyFilter from '../components/Strategies/StrategyFilter'\n\nimport './Strategies.scss'\n\nexport const strategyTypes = ['Protect', 'Accommodate', 'Retreat', 'Avoid']\n\nexport const colorForStrategy = (labelName: string): string => {\n  switch (labelName) {\n    case 'Protect':\n      return 'primary'\n    case 'Accommodate':\n      return 'warning'\n    case 'Retreat':\n      return 'danger'\n    case 'Avoid':\n      return 'info'\n    default:\n      return 'secondary'\n  }\n}\n\nconst Strategies = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n\n  const strategies = data.allMarkdownRemark.edges\n\n  const [filters, setFilters] = useState<FixTypeLater[]>([...strategyTypes])\n\n  const filteredStrategies = strategies.filter((strategyNode) =>\n    filters.includes(strategyNode.node.frontmatter.strategyTypes)\n  )\n\n  const checkboxCallback = useCallback(\n    (event) => {\n      const newFilters = [...filters]\n      const value = event.target.value\n      if (event.target.checked) {\n        newFilters.push(value)\n      } else {\n        const indexOfItem = newFilters.indexOf(value)\n        newFilters.splice(indexOfItem, 1)\n      }\n      setFilters(newFilters)\n    },\n    [filters]\n  )\n\n  useEffect(() => {\n    console.log(filters)\n  }, [filters])\n\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Strategies\" />\n      <Header>\n        <Title headingGroup=\"Strategies\" />\n        <StrategyFilter checkboxCallback={checkboxCallback} filters={filters} />\n      </Header>\n      <div className=\"StrategyCards card-columns mt-3\">\n        {filteredStrategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return <StrategyCard key={index} strategy={strategy} />\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategies\n\nStrategies.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n            excerpt\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './Title.scss'\n\ninterface Props {\n  headingGroup: string\n  title?: string\n}\n\nconst Title = ({ headingGroup, title }: Props): JSX.Element => {\n  return (\n    <div className=\"Title py-2 col-6\">\n      <h1>\n        <span className={`HeadingGroup ${title ? 'Muted' : ''}`}>\n          {headingGroup}\n          {title && <>: </>}\n        </span>\n        {title}\n      </h1>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\n\nimport './Header.scss'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst Header = ({ children }: Props): JSX.Element => {\n  return (\n    <div className=\"Header shadow row align-items-center py-3\">{children}</div>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}