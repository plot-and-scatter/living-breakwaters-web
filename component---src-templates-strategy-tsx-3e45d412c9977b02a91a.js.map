{"version":3,"sources":["webpack:///./src/components/Strategies/StrategyCard.tsx","webpack:///./src/components/Strategies/StrategyFilter.tsx","webpack:///./src/pages/strategies.tsx","webpack:///./src/components/Layout/Subhead.tsx","webpack:///./src/components/Layout/Title.tsx","webpack:///./src/components/Layout/Header.tsx","webpack:///./src/components/Strategies/StrategyCitations.tsx","webpack:///./src/components/Strategies/HowItWorks.tsx","webpack:///./src/components/Strategies/StrategyGallery.tsx","webpack:///./src/components/Strategies/StrategyItemList.tsx","webpack:///./src/components/Strategies/StrategyProjects.tsx","webpack:///./src/components/Strategies/StrategySummary.tsx","webpack:///./src/components/Strategies/StrategyDetail.tsx","webpack:///./src/templates/StrategyDropdown.tsx","webpack:///./src/templates/StrategySelect.tsx","webpack:///./src/templates/Strategy.tsx","webpack:///./src/components/Layout/ALink.tsx"],"names":["StrategyCard","strategy","console","log","strategyType","frontmatter","strategyTypes","color","colorForStrategy","className","to","fields","slug","style","title","excerpt","StrategyFilter","checkboxCallback","filters","map","key","type","id","value","onChange","defaultChecked","includes","htmlFor","labelName","pageQuery","Strategies","props","data","strategies","allMarkdownRemark","edges","useState","setFilters","filteredStrategies","filter","strategyNode","node","useCallback","event","newFilters","target","checked","push","indexOfItem","indexOf","splice","siteTitle","site","siteMetadata","Layout","location","SEO","Header","Title","headingGroup","ALink","href","external","isPDF","Subhead","index","children","level","StrategyCitations","citationHTML","dangerouslySetInnerHTML","__html","HowItWorks","images","useLayoutEffect","$","carousel","data-interval","data-target","data-slide-to","src","childImageSharp","fluid","role","data-slide","aria-hidden","StrategyGallery","imageHtml","StrategyItemList","iconName","listHTML","StrategyProjects","examples","exampleHtml","StrategySummary","summaryHTML","StrategyDetail","pageContext","subpages","summary","allFile","nodes","types","toLowerCase","benefits","challenges","StrategyDropdown","active","label","colorClass","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","StrategySelect","currentPost","s","Strategy","post","markdownRemark","description","html","externalProps","rel"],"mappings":"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","file":"component---src-templates-strategy-tsx-3e45d412c9977b02a91a.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport { colorForStrategy } from '../../pages/strategies'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCard.scss'\n\ninterface Props {\n  strategy: FixTypeLater\n}\n\nconst StrategyCard = ({ strategy }: Props): JSX.Element => {\n  console.log('strategy', strategy)\n  const strategyType = strategy.frontmatter.strategyTypes\n  const color = colorForStrategy(strategyType)\n  return (\n    <div className={`StrategyCard card border-${color}`}>\n      <div className={`d-flex card-header bg-${color}`}>\n        <Link to={strategy.fields.slug} style={{ color: 'white' }}>\n          <h5 className=\"mb-0\">{strategy.frontmatter.title}</h5>\n          <h6 className=\"mb-0\">\n            <small>{strategyType}</small>\n          </h6>\n        </Link>\n      </div>\n      <div className=\"card-body\">\n        <p>{strategy.frontmatter.excerpt}</p>\n        <p className=\"mb-0 text-right\">\n          <Link\n            to={strategy.fields.slug}\n            className={`btn btn-sm btn-outline-${color}`}\n          >\n            Learn more &rarr;\n          </Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyCard\n","import { colorForStrategy, strategyTypes } from '../../pages/strategies'\nimport React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\nimport Subhead from '../Layout/Subhead'\n\ninterface Props {\n  checkboxCallback: (event: FixTypeLater) => void\n  filters: FixTypeLater[]\n}\n\nconst StrategyFilter = ({ checkboxCallback, filters }: Props): JSX.Element => {\n  return (\n    <div className=\"StrategyFilter\">\n      {/* <Subhead>Strategies</Subhead> */}\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <h5 className=\"text-muted mr-3 mb-0\">Filter strategies:</h5>\n        {strategyTypes.map((strategyType) => {\n          const color = colorForStrategy(strategyType)\n          return (\n            <div\n              key={strategyType}\n              className={`py-1 px-2 form-check form-check-inline border border-${color} text-${color}`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id={`InlineCheckbox-${strategyType}`}\n                value={strategyType}\n                onChange={checkboxCallback}\n                defaultChecked={filters.includes(strategyType)}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor={`InlineCheckbox-${strategyType}`}\n              >\n                {strategyType}\n              </label>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyFilter\n","import { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Header from '../components/Layout/Header'\nimport Layout from '../components/Layout/Layout'\nimport Title from '../components/Layout/Title'\nimport SEO from '../components/SEO'\nimport StrategyCard from '../components/Strategies/StrategyCard'\nimport StrategyFilter from '../components/Strategies/StrategyFilter'\nimport Subhead from '../components/Layout/Subhead'\nimport ALink from '../components/Layout/ALink'\n\nimport './Strategies.scss'\n\nexport const strategyTypes = ['Protect', 'Accommodate', 'Retreat', 'Avoid']\n\nexport const colorForStrategy = (labelName: string): string => {\n  switch (labelName) {\n    case 'Protect':\n      return 'primary'\n    case 'Accommodate':\n      return 'warning'\n    case 'Retreat':\n      return 'danger'\n    case 'Avoid':\n      return 'info'\n    default:\n      return 'secondary'\n  }\n}\n\nconst Strategies = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n\n  const strategies = data.allMarkdownRemark.edges\n\n  const [filters, setFilters] = useState<FixTypeLater[]>([...strategyTypes])\n\n  const filteredStrategies = strategies.filter((strategyNode) =>\n    filters.includes(strategyNode.node.frontmatter.strategyTypes)\n  )\n\n  const checkboxCallback = useCallback(\n    (event) => {\n      const newFilters = [...filters]\n      const value = event.target.value\n      if (event.target.checked) {\n        newFilters.push(value)\n      } else {\n        const indexOfItem = newFilters.indexOf(value)\n        newFilters.splice(indexOfItem, 1)\n      }\n      setFilters(newFilters)\n    },\n    [filters]\n  )\n\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Adaptation Strategies\" />\n      <Header>\n        <Title headingGroup=\"Adaptation Strategies\" />\n        {/* <StrategyFilter checkboxCallback={checkboxCallback} filters={filters} /> */}\n      </Header>\n      <div className=\"row mt-5\">\n        <div className=\"col-6 offset-3\">\n          <p>\n            Coastal zones are some of the most ecologically sensitive and\n            diverse habitats in the world. Currently, these areas are\n            experiencing the detrimental effects of sea-level rise (SLR) and the\n            consequences of conventional flood protection methods. The Living\n            Breakwater Project understands adaptation as both physical\n            interventions and policy planning tools that reduce risks associated\n            with sea-level rise. Based on the{' '}\n            <ALink\n              href=\"https://www2.gov.bc.ca/assets/gov/environment/climate-change/adaptation/resources/slr-primer.pdf\"\n              external\n              isPDF\n            >\n              British Columbia Sea Level Rise Primer\n            </ALink>\n            , this research groups adaptation strategies in four (4) different\n            categories: protect, accommodate, retreat, and avoid.{' '}\n          </p>\n        </div>\n        <div className=\"col-8 offset-1\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <div className=\"ProtectBG p-1 mt-1\">\n                <small>Link 1</small>\n              </div>\n              <div className=\"ProtectBG p-1 mt-1\">\n                <small>Link 2</small>\n              </div>\n              <div className=\"ProtectBG p-1 mt-1\">\n                <small>Link 3</small>\n              </div>\n            </div>\n            <div className=\"col-9\">\n              <p>\n                <strong>Protect</strong> is defined as a reactive strategy in\n                response to sea-level rise and storm surges. These strategies\n                are usually more conventional structural interventions, e.g.,\n                dikes, seawalls, breakwaters, and groins. Such structures have\n                proven to be effective as a short-term solution. However, over\n                time they are likely to become less effective and will require\n                maintenance and reinforcement due to storm damage. Additionally,\n                hard structures, e.g., dikes and seawalls create negative\n                effects and feedback on ecosystem morphology and dynamics\n                resulting in ecological communities due to habitat modification.\n                Alternatively, strategies such as constructed coastal wetlands,\n                dune systems, and barrier islands are more cost-effective in the\n                long term and can be more beneficial because they provide\n                coastal recreation and ecosystem services.{' '}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6 offset-3\">\n          <p>\n            <strong>Accommodate</strong> refers to strategies that focus on\n            adapting in place, i.e., using coastal adaptation measures that\n            allow for the occupation of coastal areas even in the face of\n            impending risks, e.g., during the event of a storm. Strategies to\n            accommodate might be more useful in the short term and can be\n            implemented successfully based on judicious risk assessment that\n            identifies safe adaptation thresholds. Common accommodation\n            strategies may involve dry or wet floodproofing, including\n            amphibious buildings, secondary dikes, and crop alterations.\n            floodproofing requires the identification of a set of common\n            criteria for the implementation of flood insurance programs. Using\n            these programs flood insurance is guaranteed for communities that\n            regulate floodplain development.{' '}\n          </p>\n          <p>\n            <strong>Retreat</strong> refers to strategies that limit development\n            in areas that are affected by sea-level rise. These strategies\n            relate to policy planning tools that are meant to relocate private\n            or public assets from areas with high risk to areas with no risk or\n            lesser risk. Retreat strategies may also focus on the abandonment of\n            at-risk assets. Areas that are retreated from will most likely\n            become intertidal or natural buffer zones to accommodate future\n            sea-level rise.\n          </p>\n          <p>\n            <strong>Avoid</strong> refers to the actions that ensure no new\n            development occurs in areas that are identified as potential flood\n            zones.23 Such areas can be designated as no-build zones. Development\n            control within these zones can be implemented at the lowest local\n            level of municipal planning. Avoid strategies can be implemented\n            through measures such as land acquisitions using purchase or\n            expropriation. Such strategies will allow municipalities to\n            designate expropriated lands as flood zones and hence avoid future\n            development on these lands.{' '}\n          </p>\n          <Subhead>Adaptation Considerations</Subhead>\n          <p>\n            Many urban delta regions have high variability in flood exposure,\n            coastal ecosystem function, soil conditions, urban settlement and\n            development patterns, and multilevel governance arrangements\n            regarding coastal management. Therefore, adaptation solutions for\n            coastal flooding ought to be developed taking into considerations a\n            wide range of social and environmental conditions. These conditions\n            when considered collectively present scenarios that may require\n            different approaches to adaptation. For example, a nature-based\n            solution (NBS) approach utilizing wetlands can be effective as wave\n            attenuation during storm surges in order to protect people and\n            coastal assets from erosion and storms. However, in areas where\n            wetlands may not be viable, the most appropriate solution might be\n            retreating from the shoreline or implementing other forms of hard\n            defense, e.g., dikes or a mixture of grey and green coastal\n            infrastructure solutions. In other areas, sediment fences may be\n            used to reduce erosion and simulate sedimentation that can serve as\n            precursor to the rehabilitation of wetlands or mangrove forests.\n            Ultimately, decisions regarding the most appropriate adaptation\n            solutions are contingent on stringent approaches to risk assessment\n            and the appropriate application the risk assessment results towards\n            strategies that contribute to reducing risk but also producing\n            options for enhancing adaptation.{' '}\n          </p>\n          <Subhead>Spatial Integration</Subhead>\n          <p>\n            Although conventional flood protection strategies have proven to be\n            effective, they do not address the long-term effects of SLR and at\n            times they may harm coastal ecosystems and livelihoods rather than\n            protect them. In most cases, SLR adaptation strategies involve the\n            construction of physical structures and can have an impact on the\n            cultural significance of a community. Therefore, it is important to\n            consider how a proposed adaptation strategy will potentially affect\n            community livelihoods and biodiversity in existing ecological\n            systems.{' '}\n          </p>\n          <p>\n            Adaptation strategies for SLR should fundamentally include consider\n            relationships to existing land uses and ecological functions. These\n            concerns should include topography, geomorphology, available space,\n            land value, risk, safety, ecological value, ecosystem services, and\n            cultural significance, to name just a few. High land use density can\n            significantly limit the applicability of adaptation measures in\n            coastal areas where it is difficult to allocate space for the\n            implementation of adaptation strategies. Furthermore, land value can\n            also impact the acquisition of available space as implementing\n            large-scale flood protection requires significant space and the cost\n            and funding of acquiring land can be expensive.{' '}\n          </p>\n          <p>\n            At the same time, it is also important to consider how proposed\n            flood adaptation strategies can adapt over time, and work together\n            with other strategies. For instance, nature-based solutions (NBS)\n            can be utilized as a stand-alone approach or alongside more\n            conventional approaches to reduce risk. Ensuring there are multiple\n            layers of defence can increase resilience, reduce direct cost\n            related to the implementation of coastal adaptation projects, and\n            provide multiple co-benefits, e.g., recreational activities and\n            pollution abatement or by supporting coastal community livelihoods.\n            Flood defences, such as dikes, groins, and jetties can also be\n            aesthetically and visually obstructive or displeasing. As such,\n            adaptation strategies that utilize these approaches should include\n            significant local stakeholder input to ensure that there is adequate\n            spatial integration of adaptation solutions within the broader\n            landscape context. This can serve to foster the integration of both\n            recreational functions and the provisioning of food and energy\n            production alongside flood protection.{' '}\n          </p>\n          <Subhead>A Values-Based Approach</Subhead>\n          <p>\n            Community perception of risk is also an important consideration for\n            formulating and implementing effective coastal adaptation policy and\n            practice. This is because risk perception is shaped by individual\n            attitudes and basic beliefs related to the value of ecosystems. More\n            importantly, risk perception has been linked directly to adaptation\n            outcomes because higher levels of ecological values have correlated\n            positively with higher perceptions of risks. Perceptions of higher\n            levels of risk can contribute a heightened sense of community\n            thereby preparing littoral populations to be more responsive to\n            adapt to coastal changes. Community buy in is also critical for\n            ensuring favourable outcomes among diverse groups, to achieve\n            win-win solutions and to prevent conflicts between competing coastal\n            interests. Therefore, adaptation approaches should include\n            community-based risk assessment that consider incorporating\n            community cultural values, equitable social relations and engagement\n            that focus on joint learning, and the generation of trust and\n            commitment. These serve as underlying forces that contribute to\n            effective and equitable collaborative coastal management processes.{' '}\n          </p>\n        </div>\n        <div className=\"col-8 offset-2 mt-3\">\n          <div className=\"mb-3\">\n            <StrategyFilter\n              checkboxCallback={checkboxCallback}\n              filters={filters}\n            />\n          </div>\n          <div className=\"StrategyCards card-columns\">\n            {/* Go alphabetical left-to-right */}\n            {filteredStrategies.map((strategyNode, index) => {\n              const strategy = strategyNode.node\n              return <StrategyCard key={index} strategy={strategy} />\n            })}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategies\n\nStrategies.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n            excerpt\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './Subhead.scss'\n\ninterface Props {\n  children: React.ReactNode\n  level?: number\n}\n\nconst Subhead = ({ children, level = 1 }: Props): JSX.Element => {\n  // Level 2 = <h3>\n  if (level === 2) return <h3 className=\"Subhead mt-5 mb-3 pb-1\">{children}</h3>\n\n  // Default = <h2>\n  return <h2 className=\"Subhead mt-5 mb-3 pb-2\">{children}</h2>\n}\n\nexport default Subhead\n","import React from 'react'\n\nimport './Title.scss'\n\ninterface Props {\n  headingGroup: string\n  title?: string\n}\n\nconst Title = ({ headingGroup, title }: Props): JSX.Element => {\n  return (\n    <div className=\"Title py-2 col-6\">\n      <h1>\n        <span className={`HeadingGroup ${title ? 'Muted' : ''}`}>\n          {headingGroup}\n          {title && <>: </>}\n        </span>\n        {title}\n      </h1>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\n\nimport './Header.scss'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst Header = ({ children }: Props): JSX.Element => {\n  return (\n    <div className=\"Header shadow row align-items-center py-3\">{children}</div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCitations.scss'\n\ninterface Props {\n  citationHTML: FixTypeLater\n}\n\nconst StrategyCitations = ({ citationHTML }: Props): JSX.Element => {\n  return (\n    <div className=\"Citations my-5\">\n      <h2>Citations</h2>\n      <div dangerouslySetInnerHTML={{ __html: citationHTML }} />\n    </div>\n  )\n}\n\nexport default StrategyCitations\n","/* globals $ */\n\nimport React, { useLayoutEffect } from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './HowItWorks.scss'\n\ninterface Props {\n  images: FixTypeLater[]\n}\n\nconst HowItWorks = ({ images }: Props): JSX.Element => {\n  useLayoutEffect(() => {\n    ;($('#carouselExampleFade') as FixTypeLater).carousel()\n  }, [])\n\n  return (\n    <div className=\"Illustration HowItWorks col-8\">\n      <h2>How it works</h2>\n\n      <div\n        id=\"carouselExampleFade\"\n        className=\"carousel slide carousel-fade\"\n        // data-ride=\"carousel\"\n        data-interval={2000}\n      >\n        <ol className=\"carousel-indicators\">\n          {images.map((node, index) => {\n            return (\n              <li\n                key={index}\n                data-target=\"#carouselExampleFade\"\n                data-slide-to={index}\n              ></li>\n            )\n          })}\n        </ol>\n        <div className=\"carousel-inner\">\n          {images.map((node, index) => {\n            return (\n              <div\n                key={index}\n                className={`carousel-item ${index === 0 ? ' active' : ''}`}\n              >\n                <img\n                  className=\"d-block w-100\"\n                  src={node.childImageSharp.fluid.src}\n                />\n              </div>\n            )\n          })}\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselExampleFade\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span\n            className=\"carousel-control-prev-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselExampleFade\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span\n            className=\"carousel-control-next-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  images: FixTypeLater[]\n}\n\nconst StrategyGallery = ({ images }: Props): JSX.Element => {\n  return (\n    <div className=\"col Images\">\n      <div className=\"row ImagesTitle\">\n        <h2>\n          <i className=\"fas fa-images mr-2\"></i> Gallery\n        </h2>\n      </div>\n\n      {images &&\n        images.map((imageHtml, index) => {\n          return (\n            <div className=\"col-12\" key={index}>\n              <div\n                className=\"Image\"\n                dangerouslySetInnerHTML={{ __html: imageHtml }}\n              />\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default StrategyGallery\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  iconName?: string\n  listHTML: FixTypeLater\n  title: string\n  type: string\n}\n\nconst StrategyItemList = ({\n  iconName,\n  listHTML,\n  title,\n  type\n}: Props): JSX.Element => {\n  return (\n    <div className={`col col-4 ${type}`}>\n      <h2>\n        {iconName && <i className={`fas fa-${iconName} mr-2`} />}\n        {title}\n      </h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: listHTML\n        }}\n      />\n    </div>\n  )\n}\n\nexport default StrategyItemList\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  examples: FixTypeLater[]\n}\n\nconst StrategyProjects = ({ examples }: Props): JSX.Element => {\n  return (\n    <div className=\"col-8 Examples\">\n      <div className=\"row\">\n        <div className=\"ExamplesTitle col-12\">\n          <h2>\n            <i className=\"fas fa-tools mr-2\"></i> Example projects\n          </h2>\n        </div>\n\n        {examples &&\n          examples.map((exampleHtml, index) => {\n            return (\n              <div className=\"col\" key={index}>\n                <div\n                  className=\"Example\"\n                  dangerouslySetInnerHTML={{ __html: exampleHtml }}\n                />\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyProjects\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategySummary.scss'\n\ninterface Props {\n  strategyType: string\n  summaryHTML: FixTypeLater\n}\n\nconst StrategySummary = ({ strategyType, summaryHTML }: Props): JSX.Element => {\n  return (\n    <div className={`StrategySummary col col-4 ${strategyType}BG`}>\n      <div dangerouslySetInnerHTML={{ __html: summaryHTML }} />\n    </div>\n  )\n}\n\nexport default StrategySummary\n","import React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\nimport HowItWorks from './HowItWorks'\nimport StrategyGallery from './StrategyGallery'\nimport StrategyItemList from './StrategyItemList'\nimport StrategyProjects from './StrategyProjects'\nimport StrategySummary from './StrategySummary'\n\ninterface Props {\n  data: FixTypeLater\n  frontmatter: FixTypeLater\n  pageContext: FixTypeLater\n}\n\nconst StrategyDetail = ({\n  data,\n  frontmatter,\n  pageContext\n}: Props): JSX.Element => {\n  const strategyTypes = frontmatter.strategyTypes\n\n  return (\n    <div className=\"Post\">\n      <div className=\"row MoreInfo\">\n        <StrategySummary\n          strategyType={strategyTypes}\n          summaryHTML={pageContext.subpages.summary}\n        />\n        <HowItWorks images={data.allFile.nodes} />\n        <StrategyItemList\n          listHTML={pageContext.subpages.types}\n          title={`Types of ${frontmatter.title.toLowerCase()}`}\n          type={'Types'}\n        />\n        <StrategyItemList\n          iconName={'check'}\n          listHTML={pageContext.subpages.benefits}\n          title={'Benefits'}\n          type={'Benefits'}\n        />\n        <StrategyItemList\n          iconName={'times'}\n          listHTML={pageContext.subpages.challenges}\n          title={'Challenges'}\n          type={'Challenges'}\n        />\n      </div>\n\n      <div className=\"row BottomBG\">\n        <StrategyProjects examples={pageContext.subpages.examples} />\n        <StrategyGallery images={pageContext.subpages.images} />\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyDetail\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { colorForStrategy } from '../pages/strategies'\n\ninterface Props {\n  active?: boolean\n  label: string\n  strategies: any[]\n}\n\nconst StrategyDropdown = ({\n  active,\n  label,\n  strategies\n}: Props): JSX.Element => {\n  const colorClass = active ? colorForStrategy(label) : 'secondary'\n  return (\n    <div className=\"StrategyDropdown dropdown mr-3\">\n      <button\n        className={`btn dropdown-toggle btn-${colorClass}`}\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ color: 'white' }}\n      >\n        {label}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        {strategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return (\n            <Link\n              key={index}\n              className=\"dropdown-item\"\n              to={strategy.fields.slug}\n            >\n              {strategy.frontmatter.title}\n            </Link>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyDropdown\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { strategyTypes } from '../pages/strategies'\nimport StrategyDropdown from './StrategyDropdown'\n\nimport './StrategySelect.scss'\n\ninterface Props {\n  currentPost: any\n  strategies: any[]\n}\n\nconst StrategySelect = ({ currentPost, strategies }: Props): JSX.Element => {\n  console.log('strategies', strategies)\n  console.log(currentPost)\n\n  return (\n    <div className=\"StrategySelect d-flex\">\n      {strategyTypes.map((strategyType, index) => {\n        const filteredStrategies = strategies.filter(\n          (s) => s.node.frontmatter.strategyTypes === strategyType\n        )\n        return (\n          <StrategyDropdown\n            active={currentPost.frontmatter.strategyTypes === strategyType}\n            key={index}\n            label={strategyType}\n            strategies={filteredStrategies}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StrategySelect\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { graphql } from 'gatsby'\nimport React from 'react'\n\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO'\nimport SitePageProps from '../@types/SitePageProps'\nimport StrategyCitations from '../components/Strategies/StrategyCitations'\nimport StrategyDetail from '../components/Strategies/StrategyDetail'\nimport StrategySelect from './StrategySelect'\n\nimport './Strategies.scss'\nimport Header from '../components/Layout/Header'\nimport Title from '../components/Layout/Title'\n\nconst Strategy = (props: SitePageProps): JSX.Element => {\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Header>\n        <Title\n          headingGroup={'Adaptation Strategy'}\n          title={post.frontmatter.title}\n        />\n        <div className=\"col-6\">\n          <StrategySelect\n            currentPost={post}\n            strategies={props.data.allMarkdownRemark.edges}\n          />\n        </div>\n      </Header>\n      <div className=\"Strategies\">\n        <StrategyDetail\n          data={props.data}\n          frontmatter={post.frontmatter}\n          pageContext={props.pageContext}\n        />\n        <StrategyCitations citationHTML={post.html} />\n        {/* <hr style={{ marginBottom: '1rem' }} />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul> */}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategy\n\nexport const pageQuery = graphql`\n  query StrategyBySlug($slug: String!, $animationSlug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allFile(filter: { absolutePath: { regex: $animationSlug } }) {\n      nodes {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            src\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        strategyTypes\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './ALink.scss'\n\ninterface Props {\n  href: string\n  children: React.ReactNode\n  external?: boolean\n  isPDF?: boolean\n}\n\nconst ALink = ({ children, external, href, isPDF }: Props): JSX.Element => {\n  const externalProps: React.AnchorHTMLAttributes<HTMLAnchorElement> = {}\n\n  if (external) {\n    externalProps.target = '_blank'\n    externalProps.rel = 'noopener noreferrer'\n  }\n\n  return (\n    <a className=\"ALink\" href={href} {...externalProps}>\n      {children}\n      {isPDF && <i className=\"far fa-file-pdf mx-1\" />}\n      {external && <i className=\"fas fa-external-link-alt ml-1\" />}\n    </a>\n  )\n}\n\nexport default ALink\n"],"sourceRoot":""}