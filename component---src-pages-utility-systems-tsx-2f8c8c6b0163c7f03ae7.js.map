{"version":3,"sources":["webpack:///./src/components/Stories/StoryHeader.tsx","webpack:///./src/components/Stories/LayerLegend.tsx","webpack:///./src/components/Stories/StoryMap.tsx","webpack:///./src/components/Narratives/NarrativeToggleButtons.tsx","webpack:///./src/components/Stories/StoryNarrative.tsx","webpack:///./src/components/Stories/StoryResources.tsx","webpack:///./src/components/Stories/Story.tsx","webpack:///./src/components/Rows/BannerRow.scss","webpack:///./src/pages/utility-systems.tsx","webpack:///./src/components/Rows/BannerRow.tsx","webpack:///./content/assets/images/aditya-chinchure-2YRocbpCVeY-unsplash.jpg"],"names":["StoryHeader","imageSrc","title","lead","intro","className","BannerRow","bgOpacity","bgImage","short","id","style","textShadow","LayerLegend","activeLayers","useMapManager","activeLayerKeys","Object","keys","filter","layerKey","border","fontSize","padding","map","LayerLabel","key","layerId","StoryMap","mapText","themeKey","storyRef","useEffect","gsap","registerPlugin","ScrollTrigger","useState","mapThemeKey","setMapThemeKey","mapRef","useRef","element","current","fromTo","querySelector","autoAlpha","scrollTrigger","trigger","start","end","onEnter","endTrigger","pin","onUpdate","progress","scrollTop","scrollHeight","offsetHeight","MapLayerManager","pointerEvents","borderRadius","height","MAP_HEIGHT","Map","colWidth","lockTheme","mapHeightOverride","ref","backgroundColor","overflowY","NarrativeToggleButtons","useNarrative","showRain","toggleRain","showSurge","toggleSurge","onClick","StoryNarrative","activeNarrative","narrativeText","setNarrativeStage","narrativeRef","Tableau","StoryResources","Subhead","Story","props","SEO","module","exports","UtilitySystems","siteTitle","data","site","siteMetadata","image","NarrativeType","FoodSecurity","path","children","bannerStyle","backgroundImage","minHeight","bgColorRGB","replace","textColor","textDark","undefined","marginTop"],"mappings":"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","file":"component---src-pages-utility-systems-tsx-2f8c8c6b0163c7f03ae7.js","sourcesContent":["import React from 'react'\nimport BannerRow from '../Rows/BannerRow'\n\nexport interface StoryHeaderProps {\n  imageSrc: string\n  intro: React.ReactNode\n  lead: React.ReactNode\n  title: string\n}\n\nconst StoryHeader = ({\n  imageSrc,\n  title,\n  lead,\n  intro\n}: StoryHeaderProps): JSX.Element => {\n  return (\n    <div className=\"StoryHeader\">\n      <BannerRow bgOpacity={0.3} bgImage={imageSrc} short>\n        <a id=\"intro\" />\n        <div className=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\n          <p className=\"Cutout mb-5\">{title}</p>\n        </div>\n        <div className=\"w-100\" />\n        <div\n          className=\"lead col-12 col-md-8 offset-md-1 col-lg-6 offset-lg-2\"\n          style={{ textShadow: '0px 1px #000' }}\n        >\n          {lead}\n        </div>\n      </BannerRow>\n      <div className=\"Intro row mt-5\">\n        <div className=\"col-12 col-md-9 col-lg-6 offset-md-1 offset-lg-2\">\n          <p>{intro}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryHeader\n","import React from 'react'\nimport { useMapManager } from '../Data/MapLayerManager'\nimport LayerLabel from '../Map/Layers/LayerLabel'\n\nconst LayerLegend = (): JSX.Element => {\n  const { activeLayers } = useMapManager()\n\n  const activeLayerKeys = Object.keys(activeLayers).filter(\n    (layerKey) => activeLayers[layerKey] === true\n  )\n\n  return (\n    <div\n      className=\"LayerLegend\"\n      style={{\n        border: 'solid 1px #eee',\n        fontSize: '0.8rem',\n        padding: '0.5rem'\n      }}\n    >\n      {activeLayerKeys.map((layerKey: string) => (\n        <LayerLabel key={layerKey} layerId={layerKey} />\n      ))}\n    </div>\n  )\n}\n\nexport default LayerLegend\n","/* globals gsap, ScrollTrigger */\n\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport { MapLayerManagerProvider } from '../Data/MapLayerManager'\nimport LayerLegend from './LayerLegend'\nimport MapComponent from '../Map/Map'\n\nconst MAP_HEIGHT = 500\n\nexport interface StoryMapProps {\n  mapText: React.ReactNode\n  themeKey: string\n}\n\ninterface Props extends StoryMapProps {\n  storyRef: React.MutableRefObject<HTMLDivElement>\n}\n\nconst StoryMap = ({ mapText, themeKey, storyRef }: Props): JSX.Element => {\n  useEffect(() => gsap.registerPlugin(ScrollTrigger), [])\n\n  const [mapThemeKey, setMapThemeKey] = useState<string>()\n\n  const mapRef = useRef(null)\n\n  useEffect(() => {\n    // TODO: make the map zoom slower; show layers first, then zoom\n    const element = mapRef.current\n    gsap.fromTo(\n      element.querySelector('.MapText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.MapTableau'),\n\n          start: 'top top', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n\n          onEnter: (): void => {\n            setMapThemeKey(themeKey)\n          }\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger)\n    // MAP EFFECT scrollspy\n\n    const element = storyRef.current\n    gsap.fromTo(\n      element.querySelector('.MapText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.MapTableau'),\n          endTrigger: element.querySelector('.MapText'),\n          start: 'top 80px', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n          pin: element.querySelector('.MapTableau'),\n          // pinReparent: true,\n\n          onUpdate: (scrollTrigger): void => {\n            if (mapRef.current) {\n              const progress = scrollTrigger.progress\n\n              mapRef.current.scrollTop =\n                progress *\n                (mapRef.current.scrollHeight - mapRef.current.offsetHeight)\n            }\n          }\n        }\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"StoryMap row my-5\" id=\"map\">\n      <div className=\"col-12\">\n        <div className=\"MapTableau\">\n          <MapLayerManagerProvider>\n            <div\n              style={{\n                pointerEvents: 'none',\n                borderRadius: 0,\n                border: 'solid 1px #333',\n                height: `${MAP_HEIGHT + 2}px`\n              }}\n            >\n              <MapComponent\n                colWidth={12}\n                themeKey={mapThemeKey}\n                lockTheme\n                mapHeightOverride={MAP_HEIGHT}\n              />\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-4 col-sm-2 offset-sm-1\">\n                <LayerLegend />\n              </div>\n              <div\n                ref={mapRef}\n                className=\"MapText col-8 col-sm-6 offset-sm-1\"\n                style={{\n                  backgroundColor: '#fff',\n                  // width: '50vw',\n                  // marginLeft: '25vw',\n                  height: '30vw',\n                  overflowY: 'hidden'\n                }}\n              >\n                {mapText}\n              </div>\n            </div>\n          </MapLayerManagerProvider>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryMap\n","import React from 'react'\n\nimport { useNarrative } from './NarrativeContext'\n\nconst NarrativeToggleButtons = (): JSX.Element => {\n  const { showRain, toggleRain, showSurge, toggleSurge } = useNarrative()\n\n  return (\n    <div className=\"NarrativeToggleButtons\">\n      <button\n        className={`w-100 btn btn-sm ${\n          showRain ? 'btn-primary' : 'btn-outline-primary'\n        }`}\n        onClick={() => toggleRain()}\n      >\n        <i className=\"fas fa-cloud-showers-heavy mr-2\" />\n        {showRain ? 'Stop rain' : 'Start rain'}\n      </button>\n      <br />\n      <button\n        className={`w-100 btn btn-sm ${\n          showSurge ? 'btn-primary' : 'btn-outline-primary'\n        } mt-1`}\n        onClick={() => toggleSurge()}\n      >\n        <i className=\"fas fa-wind mr-2\" />\n        {showSurge ? 'Stop storm' : 'Start storm'}\n      </button>\n    </div>\n  )\n}\n\nexport default NarrativeToggleButtons\n","/* globals gsap, ScrollTrigger */\n\nimport React, { useEffect, useRef } from 'react'\n\nimport { NarrativeType } from '../../@types/NarrativeType'\nimport { useNarrative } from '../Narratives/NarrativeContext'\nimport NarrativeToggleButtons from '../Narratives/NarrativeToggleButtons'\nimport Tableau from '../Narratives/Tableau'\n\nexport interface StoryNarrativeProps {\n  activeNarrative: NarrativeType\n  narrativeText?: React.ReactNode\n}\n\ninterface Props extends StoryNarrativeProps {\n  storyRef: React.MutableRefObject<HTMLDivElement>\n}\n\nconst StoryNarrative = ({\n  activeNarrative,\n  narrativeText,\n  storyRef\n}: Props): JSX.Element => {\n  useEffect(() => gsap.registerPlugin(ScrollTrigger), [])\n\n  const { setNarrativeStage } = useNarrative()\n\n  const narrativeRef = useRef(null)\n\n  useEffect(() => {\n    const element = storyRef.current\n    gsap.fromTo(\n      element.querySelector('.NarrText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.NarrTableau'),\n          endTrigger: element.querySelector('.NarrText'),\n          start: 'top 80px', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n          pin: element.querySelector('.NarrTableau'),\n          // pinReparent: true,\n\n          onUpdate: (scrollTrigger): void => {\n            if (narrativeRef.current) {\n              const progress = scrollTrigger.progress\n\n              narrativeRef.current.scrollTop =\n                progress *\n                (narrativeRef.current.scrollHeight -\n                  narrativeRef.current.offsetHeight)\n\n              if (progress < 1 / 3) {\n                setNarrativeStage(0)\n              } else if (progress < 2 / 3) {\n                setNarrativeStage(1)\n              } else {\n                setNarrativeStage(2)\n              }\n            }\n          }\n        }\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"StoryNarrative row my-5\">\n      <div className=\"col-12\">\n        <div className=\"NarrTableau\" style={{ backgroundColor: '#fff' }}>\n          <Tableau activeNarrative={activeNarrative} />\n          <div className=\"row mt-3\">\n            <div className=\"col-4 col-sm-2 offset-sm-1\">\n              <div\n                className=\"LayerLegend\"\n                style={{\n                  border: 'solid 1px #eee',\n                  fontSize: '0.8rem',\n                  padding: '0.5rem'\n                }}\n              >\n                <NarrativeToggleButtons />\n              </div>\n            </div>\n            <div\n              ref={narrativeRef}\n              className=\"NarrText col-sm-6 offset-sm-1 col-8\"\n              style={{\n                backgroundColor: '#fff',\n                // width: '50vw',\n                // marginLeft: '25vw',\n                height: '30vw',\n                overflowY: 'hidden'\n              }}\n            >\n              {narrativeText}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Make the image static and cover the width of the screen; as we scroll, we update the narrative image */}\n    </div>\n  )\n}\n\nexport default StoryNarrative\n","import React from 'react'\nimport Subhead from '../Layout/Subhead'\n\nconst StoryResources = (): JSX.Element => {\n  return (\n    <div className=\"row my-5\" style={{ height: '500px' }}>\n      <div className=\"col-8 offset-2\" id=\"resources\">\n        <Subhead>Resources</Subhead>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryResources\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useRef } from 'react'\n\n// import JumpTo from './JumpTo'\nimport SEO from '../SEO'\nimport StoryHeader, { StoryHeaderProps } from './StoryHeader'\nimport StoryMap, { StoryMapProps } from './StoryMap'\nimport StoryNarrative, { StoryNarrativeProps } from './StoryNarrative'\nimport StoryResources from './StoryResources'\n\nimport './Story.scss'\n\ninterface Props extends StoryHeaderProps, StoryMapProps, StoryNarrativeProps {\n  path: string\n}\n\nconst Story = (props: Props): JSX.Element => {\n  const storyRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <div className=\"Story\" ref={storyRef}>\n      <SEO title=\"Story\" />\n      {/* <JumpTo path={path} /> */}\n      <StoryHeader {...props} />\n      <StoryMap storyRef={storyRef} {...props} />\n      <StoryNarrative storyRef={storyRef} {...props} />\n      <StoryResources />\n    </div>\n  )\n}\n\nexport default Story\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBackground\":\"#142328\"};","import { graphql } from 'gatsby'\nimport React from 'react'\n\nimport { NarrativeType } from '../@types/NarrativeType'\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Layout from '../components/Layout/Layout'\nimport Story from '../components/Stories/Story'\n\nimport './Story.scss'\nimport image from '../../content/assets/images/aditya-chinchure-2YRocbpCVeY-unsplash.jpg'\n\nconst UtilitySystems = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <Story\n        title={'Utility Systems'}\n        imageSrc={image}\n        lead={\n          <>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean arcu\n            lectus, venenatis vel felis at, auctor dignissim neque. Nam ut\n            turpis quis lorem faucibus placerat. Integer sed feugiat tellus, a\n            tristique mi. Morbi mauris ligula, consectetur et felis quis,\n            vehicula cursus nibh. In eget tellus nulla. Suspendisse nec ante\n            orci. Nulla interdum nisi nec sem fermentum commodo. Curabitur\n            accumsan ligula a leo facilisis volutpat. Sed vehicula gravida\n            iaculis. Nulla fermentum placerat eros, non volutpat magna\n            condimentum vel. Fusce fermentum imperdiet risus, id suscipit ante\n            hendrerit in. Praesent dapibus volutpat dictum. Donec lobortis est\n            et condimentum pellentesque. Suspendisse non placerat leo, quis\n            pulvinar lorem.\n          </>\n        }\n        intro={\n          <>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean arcu\n            lectus, venenatis vel felis at, auctor dignissim neque. Nam ut\n            turpis quis lorem faucibus placerat. Integer sed feugiat tellus, a\n            tristique mi. Morbi mauris ligula, consectetur et felis quis,\n            vehicula cursus nibh. In eget tellus nulla. Suspendisse nec ante\n            orci. Nulla interdum nisi nec sem fermentum commodo. Curabitur\n            accumsan ligula a leo facilisis volutpat. Sed vehicula gravida\n            iaculis. Nulla fermentum placerat eros, non volutpat magna\n            condimentum vel. Fusce fermentum imperdiet risus, id suscipit ante\n            hendrerit in. Praesent dapibus volutpat dictum. Donec lobortis est\n            et condimentum pellentesque. Suspendisse non placerat leo, quis\n            pulvinar lorem.\n          </>\n        }\n        narrativeText={\n          <>\n            <p>\n              Critical infrastructure face high levels of exposure to\n              meteorological hazards such as storm surges. These hazards are\n              expected to increase in intensity and frequency due to climate\n              change negative impacts on electricity networks.1 Disruption to\n              electricity networks causes blackouts at power plants which in\n              turn disrupt the operations of key industries, such as\n              manufacturing and agriculture, and support services such as\n              wastewater management systems.2\n            </p>\n            <p>\n              Wastewater treatment plants are critical conveyance systems of\n              grey and black water that protect human health and environmental\n              safety. In coastal communities, treatment plants may be\n              constructed at low elevations near the coastline to facilitate the\n              movement of wastewater using gravity flow. This minimizes the need\n              for wastewater pumping stations (Hummel et al., 2018).3 Location\n              of wastewater pumping stations near the coast also facilitates the\n              discharge of wastewater into the ocean. However, locating\n              wastewater plants near the coast poses several risks.{' '}\n            </p>\n            <p>\n              Firstly, wastewater plants may be susceptible to flooding and\n              silting as a result of storm surges that may disrupt mechanical\n              and electoral components. Secondly, storm surge events usually\n              trigger power failure hence wastewater treatment plants may be\n              rendered inoperable during a coastal disaster. A plausible\n              solution to this problem could be the construction of wastewater\n              treatment plants above the predicted storm surge level.3 This\n              will, however, add to the cost of wastewater conveyance.4\n            </p>\n          </>\n        }\n        themeKey={'utilitySystems'}\n        activeNarrative={NarrativeType.FoodSecurity}\n        path={'utility-systems'}\n      />\n    </Layout>\n  )\n}\n\nexport default UtilitySystems\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './BannerRow.scss'\n\ninterface Props {\n  bgColorRGB?: string\n  bgImage: string\n  bgOpacity?: number\n  children: React.ReactNode\n  textDark?: boolean\n  short?: boolean\n}\n\nconst BannerRow = (props: Props): JSX.Element => {\n  const { children } = props\n\n  const bgImage = props.bgImage\n  const bannerStyle: React.CSSProperties = {}\n  if (bgImage) {\n    bannerStyle.backgroundImage = `url(${bgImage})`\n  }\n  if (props.short) {\n    bannerStyle.minHeight = `100vh`\n  }\n\n  const bgColorRGB = props.bgColorRGB || 'rgba(0, 0, 0)'\n  const bgOpacity = props.bgOpacity || 0.5\n  const backgroundColor = bgColorRGB.replace(')', `, ${bgOpacity})`)\n\n  const textColor = props.textDark ? 'text-dark' : 'text-light'\n\n  const paddingSize = props.short ? 4 : 5\n  const padding = `py-${paddingSize}`\n\n  return (\n    <div className=\"BannerRow\" style={bannerStyle}>\n      <div\n        className={`row ${padding} ${textColor}`}\n        style={{\n          backgroundColor,\n          minHeight: props.short ? '100vh' : undefined\n        }}\n      >\n        <div\n          className={`col-12 ${padding}`}\n          style={{ marginTop: props.short ? '100px' : undefined }}\n        >\n          <div className={`my-0 ${padding} row`}>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BannerRow\n","module.exports = __webpack_public_path__ + \"static/aditya-chinchure-2YRocbpCVeY-unsplash-b9f22454cd2db6360588ca065aa99955.jpg\";"],"sourceRoot":""}