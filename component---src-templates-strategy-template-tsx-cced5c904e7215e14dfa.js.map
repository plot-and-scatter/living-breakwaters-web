{"version":3,"sources":["webpack:///./src/components/Strategies/StrategyCard.tsx","webpack:///./src/pages/strategies.tsx","webpack:///./src/templates/StrategyDropdown.tsx","webpack:///./src/templates/StrategySelect.tsx","webpack:///./src/templates/StrategyTemplate.tsx"],"names":["StrategyCard","strategy","strategyType","frontmatter","strategyTypes","color","colorForStrategy","className","to","fields","slug","style","title","excerpt","labelName","pageQuery","Strategies","props","data","strategies","allMarkdownRemark","edges","useState","filters","setFilters","filteredStrategies","filter","strategyNode","includes","node","checkboxCallback","useCallback","event","newFilters","value","target","checked","push","indexOfItem","indexOf","splice","useEffect","console","log","siteTitle","site","siteMetadata","Layout","location","SEO","map","key","type","id","onChange","defaultChecked","htmlFor","index","StrategyDropdown","active","label","colorClass","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","StrategySelect","currentPost","s","StrategyTemplate","post","markdownRemark","pageContext","previous","next","carouselRef","useRef","current","click","description","dangerouslySetInnerHTML","__html","subpages","summary","data-ride","data-interval","ref","allFile","nodes","src","childImageSharp","fluid","href","role","data-slide","aria-hidden","toLowerCase","types","benefits","challenges","examples","exampleHtml","images","imageHtml","marginBottom","html","display","flexWrap","justifyContent","listStyle","padding","rel"],"mappings":"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","file":"component---src-templates-strategy-template-tsx-cced5c904e7215e14dfa.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport { colorForStrategy } from '../../pages/strategies'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCard.scss'\n\ninterface Props {\n  strategy: FixTypeLater\n}\n\nconst StrategyCard = ({ strategy }: Props): JSX.Element => {\n  const strategyType = strategy.frontmatter.strategyTypes\n  const color = colorForStrategy(strategyType)\n  return (\n    <div className={`StrategyCard card border-${color}`}>\n      <div className={`d-flex card-header bg-${color}`}>\n        <Link to={strategy.fields.slug} style={{ color: 'white' }}>\n          <h5 className=\"mb-0\">{strategy.frontmatter.title}</h5>\n          <h6 className=\"mb-0\">\n            <small>{strategyType}</small>\n          </h6>\n        </Link>\n      </div>\n      <div className=\"card-body\">\n        <p>{strategy.frontmatter.excerpt}</p>\n        <p className=\"mb-0 text-right\">\n          <Link\n            to={strategy.fields.slug}\n            className={`btn btn-sm btn-outline-${color}`}\n          >\n            Learn more &rarr;\n          </Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyCard\n","import { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO'\nimport StrategyCard from '../components/Strategies/StrategyCard'\n\nimport './Strategies.scss'\n\nexport const strategyTypes = ['Protect', 'Accommodate', 'Retreat', 'Avoid']\n\nexport const colorForStrategy = (labelName: string): string => {\n  switch (labelName) {\n    case 'Protect':\n      return 'primary'\n    case 'Accommodate':\n      return 'warning'\n    case 'Retreat':\n      return 'danger'\n    case 'Avoid':\n      return 'info'\n    default:\n      return 'secondary'\n  }\n}\n\nconst Strategies = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n\n  const strategies = data.allMarkdownRemark.edges\n\n  const [filters, setFilters] = useState<FixTypeLater[]>([...strategyTypes])\n\n  const filteredStrategies = strategies.filter((strategyNode) =>\n    filters.includes(strategyNode.node.frontmatter.strategyTypes)\n  )\n\n  const checkboxCallback = useCallback(\n    (event) => {\n      const newFilters = [...filters]\n      const value = event.target.value\n      if (event.target.checked) {\n        newFilters.push(value)\n      } else {\n        const indexOfItem = newFilters.indexOf(value)\n        newFilters.splice(indexOfItem, 1)\n      }\n      setFilters(newFilters)\n    },\n    [filters]\n  )\n\n  useEffect(() => {\n    console.log(filters)\n  }, [filters])\n\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Strategies\" />\n      <div className=\"row my-4 align-items-center\">\n        <div className=\"col-6\">\n          <h1 className=\"mb-0\">Strategies</h1>\n        </div>\n        <div className=\"col-6 text-right\">\n          <div className=\"d-flex justify-content-end align-items-center\">\n            <h5 className=\"text-muted mr-3 mb-0\">Show strategies:</h5>\n            {strategyTypes.map((strategyType) => {\n              const color = colorForStrategy(strategyType)\n              return (\n                <div\n                  key={strategyType}\n                  className={`py-1 px-2 form-check form-check-inline border border-${color} text-${color}`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id={`InlineCheckbox-${strategyType}`}\n                    value={strategyType}\n                    onChange={checkboxCallback}\n                    defaultChecked={filters.includes(strategyType)}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor={`InlineCheckbox-${strategyType}`}\n                  >\n                    {strategyType}\n                  </label>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"StrategyCards card-columns\">\n        {filteredStrategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return <StrategyCard key={index} strategy={strategy} />\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategies\n\nStrategies.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n            excerpt\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { colorForStrategy } from '../pages/strategies'\n\ninterface Props {\n  active?: boolean\n  label: string\n  strategies: any[]\n}\n\nconst StrategyDropdown = ({\n  active,\n  label,\n  strategies\n}: Props): JSX.Element => {\n  const colorClass = active ? colorForStrategy(label) : 'secondary'\n  return (\n    <div className=\"StrategyDropdown dropdown mr-3\">\n      <button\n        className={`btn dropdown-toggle btn-${colorClass}`}\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ color: 'white' }}\n      >\n        {label}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        {strategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return (\n            <Link\n              key={index}\n              className=\"dropdown-item\"\n              to={strategy.fields.slug}\n            >\n              {strategy.frontmatter.title}\n            </Link>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyDropdown\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { strategyTypes } from '../pages/strategies'\nimport StrategyDropdown from './StrategyDropdown'\n\nimport './StrategySelect.scss'\n\ninterface Props {\n  currentPost: any\n  strategies: any[]\n}\n\nconst StrategySelect = ({ currentPost, strategies }: Props): JSX.Element => {\n  console.log('strategies', strategies)\n  console.log(currentPost)\n\n  return (\n    <div className=\"StrategySelect d-flex\">\n      {strategyTypes.map((strategyType, index) => {\n        const filteredStrategies = strategies.filter(\n          (s) => s.node.frontmatter.strategyTypes === strategyType\n        )\n        return (\n          <StrategyDropdown\n            active={currentPost.frontmatter.strategyTypes === strategyType}\n            key={index}\n            label={strategyType}\n            strategies={filteredStrategies}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StrategySelect\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport React, { useEffect, useRef } from 'react'\n\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO'\nimport SitePageProps from '../@types/SitePageProps'\nimport StrategySelect from './StrategySelect'\n\nimport './Strategies.scss'\n\nconst StrategyTemplate = (props: SitePageProps): JSX.Element => {\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title\n\n  const { previous, next } = props.pageContext\n\n  console.log(props.data)\n  console.log(post)\n\n  const carouselRef = useRef<HTMLDivElement>()\n\n  useEffect(() => {\n    carouselRef.current.click()\n  }, [])\n\n  const strategyTypes = post.frontmatter.strategyTypes\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"Strategies\">\n        <div className=\"Title row align-items-center\">\n          <div className=\"col-4\">\n            <h1>{post.frontmatter.title}</h1>\n          </div>\n          <div className=\"col-8\">\n            <StrategySelect\n              currentPost={post}\n              strategies={props.data.allMarkdownRemark.edges}\n            />\n          </div>\n        </div>\n        <div className=\"Post\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"row MoreInfo\">\n                <div className=\"Annotation col col-4\">\n                  <div\n                    className={`Summary ${strategyTypes}BG`}\n                    dangerouslySetInnerHTML={{\n                      __html: props.pageContext.subpages.summary\n                    }}\n                  />\n                </div>\n\n                <div className=\"Illustration col-8\">\n                  <h2>How it works</h2>\n                  <div\n                    id=\"carouselExampleFade\"\n                    className=\"carousel slide carousel-fade\"\n                    data-ride=\"carousel\"\n                    data-interval={2000}\n                    ref={carouselRef}\n                  >\n                    <div className=\"carousel-inner\">\n                      {props.data.allFile.nodes.map((node, index) => {\n                        return (\n                          <div\n                            key={index}\n                            className={`carousel-item${\n                              index === 0 ? ' active' : ''\n                            }`}\n                          >\n                            <img\n                              className=\"d-block w-100\"\n                              src={node.childImageSharp.fluid.src}\n                            />\n                          </div>\n                        )\n                      })}\n                    </div>\n                    <a\n                      className=\"carousel-control-prev\"\n                      href=\"#carouselExampleFade\"\n                      role=\"button\"\n                      data-slide=\"prev\"\n                    >\n                      <span\n                        className=\"carousel-control-prev-icon\"\n                        aria-hidden=\"true\"\n                      ></span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                    <a\n                      className=\"carousel-control-next\"\n                      href=\"#carouselExampleFade\"\n                      role=\"button\"\n                      data-slide=\"next\"\n                    >\n                      <span\n                        className=\"carousel-control-next-icon\"\n                        aria-hidden=\"true\"\n                      ></span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </div>\n                </div>\n\n                <div className=\"Types col col-4\">\n                  <h2>Types of {post.frontmatter.title.toLowerCase()}</h2>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: props.pageContext.subpages.types\n                    }}\n                  />\n                </div>\n\n                <div className=\"Benefits col col-4\">\n                  <h2>\n                    <i className=\"fas fa-check mr-2\" />\n                    Benefits\n                  </h2>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: props.pageContext.subpages.benefits\n                    }}\n                  />\n                </div>\n\n                <div className=\"Challenges col col-4\">\n                  <h2>\n                    <i className=\"fas fa-times mr-2\" />\n                    Challenges\n                  </h2>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: props.pageContext.subpages.challenges\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row BottomBG\">\n            <div className=\"col-8\">\n              <div className=\"Examples row\">\n                <div className=\"ExamplesTitle col-12\">\n                  <h2>\n                    <i className=\"fas fa-tools mr-2\"></i> Example projects\n                  </h2>\n                </div>\n\n                {props.pageContext.subpages.examples &&\n                  props.pageContext.subpages.examples.map(\n                    (exampleHtml, index) => {\n                      return (\n                        <div className=\"col\" key={index}>\n                          <div\n                            className=\"Example\"\n                            dangerouslySetInnerHTML={{ __html: exampleHtml }}\n                          />\n                        </div>\n                      )\n                    }\n                  )}\n              </div>\n            </div>\n\n            <div className=\"col Images\">\n              <div className=\"row ImagesTitle\">\n                <h2>\n                  <i className=\"fas fa-images mr-2\"></i> Gallery\n                </h2>\n              </div>\n\n              {props.pageContext.subpages.images &&\n                props.pageContext.subpages.images.map((imageHtml, index) => {\n                  return (\n                    <div className=\"col-12\" key={index}>\n                      <div\n                        className=\"Image\"\n                        dangerouslySetInnerHTML={{ __html: imageHtml }}\n                      />\n                    </div>\n                  )\n                })}\n            </div>\n          </div>\n        </div>\n        <hr style={{ marginBottom: '1rem' }} />\n        <div\n          className=\"Citations\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <hr style={{ marginBottom: '1rem' }} />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default StrategyTemplate\n\nexport const pageQuery = graphql`\n  query StrategyBySlug($slug: String!, $animationSlug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allFile(filter: { absolutePath: { regex: $animationSlug } }) {\n      nodes {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            src\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        strategyTypes\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}