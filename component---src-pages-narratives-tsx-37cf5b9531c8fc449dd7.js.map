{"version":3,"sources":["webpack:///./src/components/Narratives/NarrativeSelect.scss","webpack:///./src/components/Layout/LaunchButton.tsx","webpack:///./src/components/Layout/Title.tsx","webpack:///./src/components/Narratives/Frames/NarrativePopup.tsx","webpack:///./src/components/Narratives/NarrativeInput.tsx","webpack:///./src/components/Narratives/NarrativeSelect.tsx","webpack:///./src/components/Narratives/Frames/NarrativeDescription.tsx","webpack:///./src/components/Narratives/Frames/NarrativeFrame.tsx","webpack:///./src/components/Narratives/Selection/NarrativeSelection.tsx","webpack:///./src/pages/narratives.tsx","webpack:///./src/components/Layout/Header.tsx","webpack:///./src/components/Layout/Title.scss","webpack:///./content/assets/images/logistics-networks.png","webpack:///./content/assets/images/food-security.png","webpack:///./content/assets/images/cultural-landscapes.png","webpack:///./content/assets/images/utility-systems.png","webpack:///./src/components/Layout/Header.scss"],"names":["module","exports","LaunchButton","text","small","className","Title","headingGroup","title","NarrativePopup","content","contentKey","setContentKey","left","console","log","leftValue","undefined","showLine","useNarrative","narrativeStage","setNarrativeStage","style","onClick","NarrativeInput","stageNames","stages","i","length","push","key","setNarrativeStageCallback","useCallback","stage","type","min","max","id","value","onChange","event","target","DEFAULT_STAGE_NAMES","FOOD_SEC_STAGE_NAMES","UTIL_SYS_STAGE_NAMES","NarrativeSelect","activeNarrative","isCompact","NarrativeType","FoodSecurity","UtilitySystems","CulturalLandscapes","NarrativeDescription","image","cursor","Subhead","level","src","maxWidth","NarrativeFrame","setActiveNarrative","useState","setLeft","setContent","topContent","setTopContent","setShowRain","popoverClick","e","persist","bbox","closest","querySelector","getBoundingClientRect","x","width","useEffect","CulturalLandscapesPopupDictionary","UtilitySystemsPopupDictionary","FoodSecurityPopupDictionary","LogisticsNetworks","LogisticsNetworksPopupDictionary","newTopContent","CULTURAL_LANDSCAPES","UTILITY_SYSTEMS","FOOD_SECURITY","LOGISTICS_NETWORKS","Tableau","logisticsNetworks","culturalLandscapes","utilitySystems","foodSecurity","NarrativeSelection","data-toggle","aria-haspopup","aria-expanded","color","aria-labelledby","Object","values","map","narrative","index","Narratives","props","siteTitle","data","site","siteMetadata","Layout","location","SEO","Header","children"],"mappings":"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","file":"component---src-pages-narratives-tsx-37cf5b9531c8fc449dd7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBackground\":\"#142328\"};","import React from 'react'\n\ninterface Props {\n  text: string\n  small?: boolean\n}\n\nconst LaunchButton = ({ text, small }: Props): JSX.Element => {\n  return (\n    <div className=\"LaunchButton\">\n      <button className={`btn ${!small && 'btn-lg'} btn-outline-primary`}>\n        {text}\n      </button>\n    </div>\n  )\n}\n\nexport default LaunchButton\n","import React from 'react'\n\nimport './Title.scss'\n\ninterface Props {\n  headingGroup: string\n  title?: string\n}\n\nconst Title = ({ headingGroup, title }: Props): JSX.Element => {\n  return (\n    <div className=\"Title py-2 col-6\">\n      <h1>\n        <span className={`HeadingGroup ${title ? 'Muted' : ''}`}>\n          {headingGroup}\n          {title && <>: </>}\n        </span>\n        {title}\n      </h1>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\nimport { useNarrative } from '../NarrativeContext'\n\nimport './NarrativePopup.scss'\n\ninterface Props {\n  content: React.ReactNode\n  contentKey: string\n  setContentKey: (key?: string) => void\n  left: number\n}\n\nconst NarrativePopup = ({\n  content,\n  contentKey,\n  setContentKey,\n  left\n}: Props): JSX.Element => {\n  console.log('-> NarrativePopup ', content, contentKey, left)\n\n  if (!content) return <></>\n\n  const leftValue =\n    left === undefined ? `50%` : left < 150 ? `150px` : `${left}px`\n\n  const showLine = left !== undefined ? true : false\n\n  const { narrativeStage, setNarrativeStage } = useNarrative()\n\n  return (\n    <>\n      <div className=\"NarrativePopup\" style={{ left: leftValue }}>\n        <div className=\"NarrativeContent rounded shadow\">\n          <div className=\"d-flex p-2 justify-content-between align-items-center\">\n            <h2 className=\"my-0\">{contentKey}</h2>\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              onClick={() => setContentKey(undefined)}\n            >\n              <i className=\"fas fa-times\" />\n            </button>\n          </div>\n          <div className=\"FrameContent p-2\">{content}</div>\n          <div className=\"d-flex justify-content-between p-2\">\n            <button\n              className=\"btn btn-sm btn-light\"\n              onClick={() => setNarrativeStage(narrativeStage - 1)}\n            >\n              &larr; Previous state\n            </button>\n            <button\n              className=\"btn btn-sm btn-light\"\n              onClick={() => setNarrativeStage(narrativeStage + 1)}\n            >\n              Next state &rarr;\n            </button>\n          </div>\n        </div>\n        {showLine && <div className=\"Line\"></div>}\n      </div>\n    </>\n  )\n}\n\nexport default NarrativePopup\n","import React, { useCallback } from 'react'\n\ninterface Props {\n  narrativeStage: number\n  setNarrativeStage: (stage: number) => void\n  stageNames: string[]\n}\n\nconst NarrativeInput = ({\n  narrativeStage,\n  setNarrativeStage,\n  stageNames\n}: Props): JSX.Element => {\n  const stages = []\n  for (let i = 0; i < stageNames.length; i++) {\n    stages.push(\n      <div\n        key={i}\n        className={`text-center Stage ${\n          narrativeStage === +i ? 'ActiveStage' : ''\n        }`}\n      >\n        {stageNames[i]}\n      </div>\n    )\n  }\n\n  const setNarrativeStageCallback = useCallback(\n    (stage) => setNarrativeStage(stage),\n    [setNarrativeStage]\n  )\n\n  return (\n    <div className=\"NarrativeInput\">\n      <div className=\"mt-3 d-flex align-items-center justify-content-between\">\n        {stages}\n      </div>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max={stageNames.length - 1}\n        className=\"slider\"\n        id=\"myRange\"\n        value={narrativeStage}\n        onChange={(event) => setNarrativeStageCallback(event.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default NarrativeInput\n","import React from 'react'\n\nimport { useNarrative } from './NarrativeContext'\nimport NarrativeInput from './NarrativeInput'\nimport NarrativeToggleButtons from './NarrativeToggleButtons'\n\nimport './NarrativeSelect.scss'\nimport { NarrativeType } from '../../@types/NarrativeType'\n\nexport const DEFAULT_STAGE_NAMES = [\n  'Current state',\n  'Sea level rise (SLR)',\n  'SLR + storm'\n]\n\nexport const FOOD_SEC_STAGE_NAMES = [\n  'Current state',\n  'Sea level rise (SLR)',\n  'SLR + rain event',\n  'SLR + storm surge'\n]\n\nexport const UTIL_SYS_STAGE_NAMES = [\n  'Current state',\n  'Rain event',\n  'Sea level rise (SLR)',\n  'SLR + storm'\n]\n\ninterface Props {\n  activeNarrative: NarrativeType\n  isCompact?: boolean\n}\n\nconst NarrativeSelect = ({\n  activeNarrative,\n  isCompact\n}: Props): JSX.Element => {\n  const { narrativeStage, setNarrativeStage } = useNarrative()\n\n  const stageNames =\n    activeNarrative === NarrativeType.FoodSecurity\n      ? FOOD_SEC_STAGE_NAMES\n      : activeNarrative === NarrativeType.UtilitySystems ||\n        activeNarrative === NarrativeType.CulturalLandscapes\n      ? UTIL_SYS_STAGE_NAMES\n      : DEFAULT_STAGE_NAMES\n\n  return (\n    <div className=\"NarrativeSelect\">\n      {!isCompact && (\n        <>\n          <h4 className=\"mb-0\">Show what happens with...</h4>\n        </>\n      )}\n      <NarrativeInput\n        setNarrativeStage={setNarrativeStage}\n        narrativeStage={narrativeStage}\n        stageNames={stageNames}\n      />\n      {/* <div className=\"mt-3 d-flex align-items-center justify-content-between\">\n        {STAGE_NAMES.map((_, index) => (\n          <div key={index}>\n            {+narrativeStage === index && <NarrativeToggleButtons />}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  )\n}\n\nexport default NarrativeSelect\n","import React from 'react'\nimport LaunchButton from '../../Layout/LaunchButton'\nimport Subhead from '../../Layout/Subhead'\n\ninterface Props {\n  content: JSX.Element\n  image: string\n  onClick: () => void\n  title: string\n}\n\nconst NarrativeDescription = ({\n  content,\n  image,\n  onClick,\n  title\n}: Props): JSX.Element => {\n  return (\n    <div className=\"col-12 p-3\" onClick={onClick} style={{ cursor: 'pointer' }}>\n      <Subhead level={2}>{title}</Subhead>\n      <p>{content}</p>\n      <img\n        className=\"border border-dark shadow-sm\"\n        src={image}\n        style={{ maxWidth: '100%' }}\n      />\n      <div className=\"mt-4 text-center\">\n        <LaunchButton text={`Explore ${title}`} />\n      </div>\n    </div>\n  )\n}\n\nexport default NarrativeDescription\n","import React, { useEffect, useState } from 'react'\nimport { NarrativeType } from '../../../@types/NarrativeType'\n\nimport { CulturalLandscapesPopupDictionary } from '../CulturalLandscapes/CulturalLandscapesPopupDictionary'\nimport { DEFAULT_CONTENT as CULTURAL_LANDSCAPES } from '../CulturalLandscapes/CulturalLandscapesTableau'\nimport { DEFAULT_CONTENT as FOOD_SECURITY } from '../FoodSecurity/FoodSecurityTableau'\nimport { DEFAULT_CONTENT as LOGISTICS_NETWORKS } from '../LogisticsNetworks/LogisticsNetworksTableau'\nimport { DEFAULT_CONTENT as UTILITY_SYSTEMS } from '../UtilitySystems/UtilitySystemsTableau'\nimport { FoodSecurityPopupDictionary } from '../FoodSecurity/FoodSecurityPopupDictionary'\nimport { LogisticsNetworksPopupDictionary } from '../LogisticsNetworks/LogisticsNetworksPopupDictionary'\nimport { useCallback } from 'react'\nimport { useNarrative } from '../NarrativeContext'\nimport { UtilitySystemsPopupDictionary } from '../UtilitySystems/UtilitySystemsPopupDictionary'\nimport FixTypeLater from '../../../@types/FixTypeLater'\nimport NarrativePopup from './NarrativePopup'\nimport NarrativeSelect from '../NarrativeSelect'\nimport Tableau from '../Tableau'\n\nimport utilitySystems from '../../../../content/assets/images/utility-systems.png'\nimport logisticsNetworks from '../../../../content/assets/images/logistics-networks.png'\nimport culturalLandscapes from '../../../../content/assets/images/cultural-landscapes.png'\nimport foodSecurity from '../../../../content/assets/images/food-security.png'\n\nimport './NarrativeFrame.scss'\nimport NarrativeDescription from './NarrativeDescription'\n\ninterface Props {\n  activeNarrative: NarrativeType\n  setActiveNarrative: FixTypeLater\n}\n\nconst NarrativeFrame = ({\n  activeNarrative,\n  setActiveNarrative\n}: Props): JSX.Element => {\n  const [contentKey, setContentKey] = useState<string>()\n  const [left, setLeft] = useState<number>()\n  const [content, setContent] = useState<React.ReactNode>()\n  const [topContent, setTopContent] = useState<React.ReactNode>()\n\n  const { narrativeStage, setNarrativeStage, setShowRain } = useNarrative()\n\n  // useEffect(() => {\n  //   console.log('contentKey', contentKey)\n  //   if (contentKey && contentKey.event) {\n  //     const e = contentKey.event\n  //     const target = e.target\n  //     const popoverParent = e.target.closest('.Popover')\n  //     const textbox = popoverParent.querySelector('.Textbox text')\n  //     console.log('e', target, textbox.getBoundingClientRect())\n  //   }\n  // }, [contentKey])\n\n  const popoverClick = useCallback((event: Event, contentKey: string) => {\n    console.log('event', event)\n    console.log('contentKey', contentKey)\n    if (contentKey && event) {\n      const e: FixTypeLater = event\n      e.persist()\n      const popoverParent = e.target.closest('.Popover')\n      const textbox = popoverParent.querySelector('.Textbox text')\n      const bbox = textbox.getBoundingClientRect()\n      // console.log('e', target, textbox.getBoundingClientRect())\n      setLeft(bbox.x + bbox.width / 2)\n      setContentKey(contentKey)\n    }\n  }, [])\n\n  useEffect(() => {\n    setContent(undefined)\n    setContentKey(undefined)\n    setNarrativeStage(0)\n    setLeft(undefined)\n    setShowRain(false)\n  }, [activeNarrative])\n\n  // useEffect(() => {\n  //   setContent(undefined)\n  // }, [narrativeStage])\n\n  useEffect(() => {\n    console.log('====> contentKey', contentKey)\n    let content\n    if (!contentKey) {\n      // switch (activeNarrative) {\n      //   case NarrativeType.CulturalLandscapes:\n      //     content = CULTURAL_LANDSCAPES\n      //     break\n      //   case NarrativeType.UtilitySystems:\n      //     content = UTILITY_SYSTEMS\n      //     break\n      //   case NarrativeType.FoodSecurity:\n      //     content = FOOD_SECURITY\n      //     break\n      //   case NarrativeType.LogisticsNetworks:\n      //     content = LOGISTICS_NETWORKS\n      //     break\n      // }\n    } else {\n      switch (activeNarrative) {\n        case NarrativeType.CulturalLandscapes:\n          content =\n            CulturalLandscapesPopupDictionary[contentKey][narrativeStage]\n\n          break\n        case NarrativeType.UtilitySystems:\n          content = UtilitySystemsPopupDictionary[contentKey][narrativeStage]\n          break\n        case NarrativeType.FoodSecurity:\n          content = FoodSecurityPopupDictionary[contentKey][narrativeStage]\n          break\n        case NarrativeType.LogisticsNetworks:\n          content = LogisticsNetworksPopupDictionary[contentKey][narrativeStage]\n\n          break\n      }\n    }\n    console.log(\n      'activeNarrative',\n      activeNarrative,\n      'narrativeStage',\n      narrativeStage,\n      '==> content',\n      content,\n      CulturalLandscapesPopupDictionary,\n      CulturalLandscapesPopupDictionary[contentKey]\n    )\n    setContent(content)\n  }, [activeNarrative, contentKey, narrativeStage])\n\n  useEffect(() => {\n    let newTopContent\n    switch (activeNarrative) {\n      case NarrativeType.CulturalLandscapes:\n        newTopContent = CULTURAL_LANDSCAPES\n        break\n      case NarrativeType.UtilitySystems:\n        newTopContent = UTILITY_SYSTEMS\n        break\n      case NarrativeType.FoodSecurity:\n        newTopContent = FOOD_SECURITY\n        break\n      case NarrativeType.LogisticsNetworks:\n        newTopContent = LOGISTICS_NETWORKS\n        break\n    }\n    setTopContent(newTopContent)\n  }, [activeNarrative])\n\n  return (\n    <div className=\"NarrativeFrame row\">\n      <div className=\"col-12\">\n        <div className=\"row mt-5\">\n          <div className=\"col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n            <p className=\"lead\">\n              {!activeNarrative && (\n                <div className=\"Highlight\">\n                  Narrative introduction text. Sed ut perspiciatis unde omnis\n                  iste natus error sit voluptatem accusantium doloremque\n                  laudantium, totam rem aperiam, eaque ipsa quae ab illo\n                  inventore veritatis et quasi architecto beatae vitae dicta\n                  sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n                  aspernatur aut odit aut fugit, sed quia consequuntur magni\n                  dolores eos qui ratione voluptatem sequi nesciunt. Neque porro\n                  quisquam est, qui dolorem ipsum quia dolor sit amet,\n                  consectetur, adipisci velit, sed quia non numquam eius modi\n                  tempora incidunt ut labore et dolore magnam aliquam quaerat\n                  voluptatem. Ut enim ad minima veniam, quis nostrum\n                  exercitationem ullam corporis suscipit laboriosam, nisi ut\n                  aliquid ex ea commodi consequatur? Quis autem vel eum iure\n                  reprehenderit qui in ea voluptate velit esse quam nihil\n                  molestiae consequatur, vel illum qui dolorem eum fugiat quo\n                  voluptas nulla pariatur?\n                </div>\n              )}\n              {activeNarrative && topContent}\n            </p>\n          </div>\n        </div>\n      </div>\n      {activeNarrative && (\n        <div className=\"TableauWrapper col-12\">\n          <Tableau\n            activeNarrative={activeNarrative}\n            popoverClick={popoverClick}\n          />\n          <div className=\"col-6 offset-3 mt-3\">\n            <NarrativeSelect activeNarrative={activeNarrative} />\n          </div>\n          <NarrativePopup\n            left={left}\n            content={content}\n            contentKey={contentKey}\n            setContentKey={setContentKey}\n          />\n        </div>\n      )}\n      {!activeNarrative && (\n        <>\n          <div className=\"col-6 offset-3\">\n            <div className=\"row\">\n              <NarrativeDescription\n                title=\"Logistics Networks\"\n                onClick={() =>\n                  setActiveNarrative(NarrativeType.LogisticsNetworks)\n                }\n                image={logisticsNetworks}\n                content={LOGISTICS_NETWORKS}\n              />\n              <NarrativeDescription\n                title=\"Cultural Landscapes\"\n                onClick={() =>\n                  setActiveNarrative(NarrativeType.CulturalLandscapes)\n                }\n                image={culturalLandscapes}\n                content={CULTURAL_LANDSCAPES}\n              />\n              <NarrativeDescription\n                title=\"Utility Systems\"\n                onClick={() => setActiveNarrative(NarrativeType.UtilitySystems)}\n                image={utilitySystems}\n                content={UTILITY_SYSTEMS}\n              />\n              <NarrativeDescription\n                title=\"Food Security\"\n                onClick={() => setActiveNarrative(NarrativeType.FoodSecurity)}\n                image={foodSecurity}\n                content={FOOD_SECURITY}\n              />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default NarrativeFrame\n","import React from 'react'\nimport { NarrativeType } from '../../../@types/NarrativeType'\n\ninterface Props {\n  activeNarrative: NarrativeType\n  setActiveNarrative: (narrative: NarrativeType) => void\n}\n\nconst NarrativeSelection = ({\n  activeNarrative,\n  setActiveNarrative\n}: Props): JSX.Element => {\n  return (\n    <div className=\"StrategyDropdown dropdown\">\n      <button\n        className={`btn dropdown-toggle btn-primary`}\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ color: 'white' }}\n      >\n        Select a narrative\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        {Object.values(NarrativeType).map((narrative, index) => {\n          return (\n            <button\n              key={index}\n              className=\"dropdown-item\"\n              onClick={() => setActiveNarrative(narrative)}\n            >\n              {narrative}\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default NarrativeSelection\n","import { graphql } from 'gatsby'\nimport React, { useState } from 'react'\n\nimport { NarrativeType } from '../@types/NarrativeType'\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Layout from '../components/Layout/Layout'\nimport NarrativeFrame from '../components/Narratives/Frames/NarrativeFrame'\nimport NarrativeSelection from '../components/Narratives/Selection/NarrativeSelection'\nimport SEO from '../components/SEO'\nimport Header from '../components/Layout/Header'\nimport Title from '../components/Layout/Title'\n\nimport './Narratives.scss'\n\nconst Narratives = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n  const siteTitle = data.site.siteMetadata.title\n\n  const [activeNarrative, setActiveNarrative] = useState()\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Narratives\" />\n      <Header>\n        <Title headingGroup=\"Narratives\" title={activeNarrative} />\n        <div className=\"col-6 text-right\">\n          <NarrativeSelection\n            activeNarrative={activeNarrative}\n            setActiveNarrative={setActiveNarrative}\n          />\n        </div>\n      </Header>\n      <div className=\"Narratives\">\n        <NarrativeFrame\n          activeNarrative={activeNarrative}\n          setActiveNarrative={setActiveNarrative}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default Narratives\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './Header.scss'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst Header = ({ children }: Props): JSX.Element => {\n  return <div className=\"Header shadow row align-items-center\">{children}</div>\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBackground\":\"#142328\"};","module.exports = __webpack_public_path__ + \"static/logistics-networks-322562534a739a4eb1b85d32e1c04836.png\";","module.exports = __webpack_public_path__ + \"static/food-security-f37e4e6a1aec2ca1ad5dd3ee583114e7.png\";","module.exports = __webpack_public_path__ + \"static/cultural-landscapes-54cba2beb3f23a52f5cb1af20e8f1709.png\";","module.exports = __webpack_public_path__ + \"static/utility-systems-0d76baeb9a9a179222b0e79ee36694b3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBackground\":\"#142328\"};"],"sourceRoot":""}