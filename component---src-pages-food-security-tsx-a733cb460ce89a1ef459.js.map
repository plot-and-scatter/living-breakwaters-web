{"version":3,"sources":["webpack:///./content/assets/images/ben-den-engelsen-8aVLLbr1HxI-unsplash.jpg","webpack:///./src/components/Stories/StoryHeader.tsx","webpack:///./src/components/Stories/LayerLegend.tsx","webpack:///./src/components/Stories/StoryMap.tsx","webpack:///./src/components/Narratives/NarrativeToggleButtons.tsx","webpack:///./src/components/Stories/StoryNarrative.tsx","webpack:///./src/components/Stories/StoryResources.tsx","webpack:///./src/components/Stories/Story.tsx","webpack:///./src/components/Rows/BannerRow.scss","webpack:///./src/pages/food-security.tsx","webpack:///./src/components/Rows/BannerRow.tsx"],"names":["module","exports","StoryHeader","imageSrc","title","lead","intro","className","BannerRow","bgOpacity","bgImage","short","id","style","textShadow","LayerLegend","activeLayers","useMapManager","activeLayerKeys","Object","keys","filter","layerKey","border","fontSize","padding","map","LayerLabel","key","layerId","StoryMap","mapText","themeKey","storyRef","useEffect","gsap","registerPlugin","ScrollTrigger","useState","mapThemeKey","setMapThemeKey","mapRef","useRef","element","current","fromTo","querySelector","autoAlpha","scrollTrigger","trigger","start","end","onEnter","endTrigger","pin","onUpdate","progress","scrollTop","scrollHeight","offsetHeight","MapLayerManager","pointerEvents","borderRadius","height","MAP_HEIGHT","Map","colWidth","lockTheme","mapHeightOverride","ref","backgroundColor","overflowY","NarrativeToggleButtons","useNarrative","showRain","toggleRain","showSurge","toggleSurge","onClick","StoryNarrative","activeNarrative","narrativeText","setNarrativeStage","narrativeRef","Tableau","StoryResources","Subhead","Story","props","SEO","FoodSecurity","siteTitle","data","site","siteMetadata","location","image","NarrativeType","path","children","bannerStyle","backgroundImage","minHeight","bgColorRGB","replace","textColor","textDark","undefined","marginTop"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,qF,mFCwC5BC,EA9BK,SAAC,GAKgB,IAJnCC,EAImC,EAJnCA,SACAC,EAGmC,EAHnCA,MACAC,EAEmC,EAFnCA,KACAC,EACmC,EADnCA,MAEA,OACE,yBAAKC,UAAU,eACb,kBAACC,EAAA,EAAD,CAAWC,UAAW,GAAKC,QAASP,EAAUQ,OAAK,GACjD,uBAAGC,GAAG,UACN,yBAAKL,UAAU,qDACb,uBAAGA,UAAU,eAAeH,IAE9B,yBAAKG,UAAU,UACf,yBACEA,UAAU,wDACVM,MAAO,CAAEC,WAAY,iBAEpBT,IAGL,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,oDACb,2BAAID,O,wBCNCS,EAvBK,WAClB,IAAQC,EAAiBC,cAAjBD,aAEFE,EAAkBC,OAAOC,KAAKJ,GAAcK,QAChD,SAACC,GAAD,OAAyC,IAA3BN,EAAaM,MAG7B,OACE,yBACEf,UAAU,cACVM,MAAO,CACLU,OAAQ,iBACRC,SAAU,SACVC,QAAS,WAGVP,EAAgBQ,KAAI,SAACJ,GAAD,OACnB,kBAACK,EAAA,EAAD,CAAYC,IAAKN,EAAUO,QAASP,S,YCgH7BQ,EAlHE,SAAC,GAAwD,IAAtDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,SACrCC,qBAAU,kBAAMC,KAAKC,eAAeC,iBAAgB,IAEpD,MAAsCC,qBAA/BC,EAAP,KAAoBC,EAApB,KAEMC,EAASC,iBAAO,MAgEtB,OA9DAR,qBAAU,WAER,IAAMS,EAAUF,EAAOG,QACvBT,KAAKU,OACHF,EAAQG,cAAc,YACtB,CACEC,UAAW,GAEb,CACEA,UAAW,EACXC,cAAe,CACbC,QAASN,EAAQG,cAAc,eAE/BI,MAAO,UACPC,IAAK,gBAILC,QAAS,WACPZ,EAAeR,SAKtB,IAEHE,qBAAU,WACRC,KAAKC,eAAeC,eAGpB,IAAMM,EAAUV,EAASW,QACzBT,KAAKU,OACHF,EAAQG,cAAc,YACtB,CACEC,UAAW,GAEb,CACEA,UAAW,EACXC,cAAe,CACbC,QAASN,EAAQG,cAAc,eAC/BO,WAAYV,EAAQG,cAAc,YAClCI,MAAO,WACPC,IAAK,gBAGLG,IAAKX,EAAQG,cAAc,eAG3BS,SAAU,SAACP,GACT,GAAIP,EAAOG,QAAS,CAClB,IAAMY,EAAWR,EAAcQ,SAE/Bf,EAAOG,QAAQa,UACbD,GACCf,EAAOG,QAAQc,aAAejB,EAAOG,QAAQe,qBAMzD,IAGD,yBAAKpD,UAAU,oBAAoBK,GAAG,OACpC,yBAAKL,UAAU,UACb,yBAAKA,UAAU,cACb,kBAACqD,EAAA,EAAD,KACE,yBACE/C,MAAO,CACLgD,cAAe,OACfC,aAAc,EACdvC,OAAQ,iBACRwC,OAAWC,UAGb,kBAACC,EAAA,EAAD,CACEC,SAAU,GACVlC,SAAUO,EACV4B,WAAS,EACTC,kBAjGG,OAoGP,yBAAK7D,UAAU,YACb,yBAAKA,UAAU,8BACb,kBAAC,EAAD,OAEF,yBACE8D,IAAK5B,EACLlC,UAAU,qCACVM,MAAO,CACLyD,gBAAiB,OAGjBP,OAAQ,OACRQ,UAAW,WAGZxC,S,YC3FFyC,EA5BgB,WAC7B,MAAyDC,cAAjDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,YAEzC,OACE,yBAAKtE,UAAU,0BACb,4BACEA,UAAS,qBACPmE,EAAW,cAAgB,uBAE7BI,QAAS,kBAAMH,MAEf,uBAAGpE,UAAU,oCACZmE,EAAW,YAAc,cAE5B,6BACA,4BACEnE,UAAS,qBACPqE,EAAY,cAAgB,uBADrB,QAGTE,QAAS,kBAAMD,MAEf,uBAAGtE,UAAU,qBACZqE,EAAY,aAAe,iB,YCoFrBG,EA5FQ,SAAC,GAIE,IAHxBC,EAGwB,EAHxBA,gBACAC,EAEwB,EAFxBA,cACAhD,EACwB,EADxBA,SAEAC,qBAAU,kBAAMC,KAAKC,eAAeC,iBAAgB,IAEpD,IAAQ6C,EAAsBT,cAAtBS,kBAEFC,EAAezC,iBAAO,MA4C5B,OA1CAR,qBAAU,WACR,IAAMS,EAAUV,EAASW,QACzBT,KAAKU,OACHF,EAAQG,cAAc,aACtB,CACEC,UAAW,GAEb,CACEA,UAAW,EACXC,cAAe,CACbC,QAASN,EAAQG,cAAc,gBAC/BO,WAAYV,EAAQG,cAAc,aAClCI,MAAO,WACPC,IAAK,gBAGLG,IAAKX,EAAQG,cAAc,gBAG3BS,SAAU,SAACP,GACT,GAAImC,EAAavC,QAAS,CACxB,IAAMY,EAAWR,EAAcQ,SAE/B2B,EAAavC,QAAQa,UACnBD,GACC2B,EAAavC,QAAQc,aACpByB,EAAavC,QAAQe,cAGvBuB,EADE1B,EAAW,EAAI,EACC,EACTA,EAAW,EAAI,EACN,EAEA,UAO7B,IAGD,yBAAKjD,UAAU,2BACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cAAcM,MAAO,CAAEyD,gBAAiB,SACrD,kBAACc,EAAA,EAAD,CAASJ,gBAAiBA,IAC1B,yBAAKzE,UAAU,YACb,yBAAKA,UAAU,8BACb,yBACEA,UAAU,cACVM,MAAO,CACLU,OAAQ,iBACRC,SAAU,SACVC,QAAS,WAGX,kBAAC,EAAD,QAGJ,yBACE4C,IAAKc,EACL5E,UAAU,sCACVM,MAAO,CACLyD,gBAAiB,OAGjBP,OAAQ,OACRQ,UAAW,WAGZU,Q,YCvFAI,EAVQ,WACrB,OACE,yBAAK9E,UAAU,WAAWM,MAAO,CAAEkD,OAAQ,UACzC,yBAAKxD,UAAU,iBAAiBK,GAAG,aACjC,kBAAC0E,EAAA,EAAD,qB,UCwBOC,IAfD,SAACC,GACb,IAAMvD,EAAWS,iBAAuB,MAExC,OACE,yBAAKnC,UAAU,QAAQ8D,IAAKpC,GAC1B,kBAACwD,EAAA,EAAD,CAAKrF,MAAM,UAEX,kBAAC,EAAgBoF,GACjB,kBAAC,EAAD,eAAUvD,SAAUA,GAAcuD,IAClC,kBAAC,EAAD,eAAgBvD,SAAUA,GAAcuD,IACxC,kBAAC,EAAD,S,qBCzBNxF,EAAOC,QAAU,CAAC,gBAAkB,Y,kCCApC,qGAyHeyF,UA/GM,SAACF,GACpB,IACMG,EADWH,EAATI,KACeC,KAAKC,aAAa1F,MAEzC,OACE,kBAAC,IAAD,CAAQ2F,SAAUP,EAAMO,SAAU3F,MAAOuF,GACvC,kBAAC,IAAD,CACEvF,MAAO,gBACPD,SAAU6F,IACV3F,KACE,gkBAYFC,MACE,gkBAYFyB,QACE,oCACE,glBASqD,KAGrD,ooBAU2C,MAI/CkD,cACE,oCACE,shBAQ6D,KAG7D,6fAWA,qvBAgBJjD,SAAU,eACVgD,gBAAiBiB,IAAcP,aAC/BQ,KAAM,qB,gFCpHd,mCAsDe1F,IAzCG,SAACgF,GACjB,IAAQW,EAAaX,EAAbW,SAEFzF,EAAU8E,EAAM9E,QAChB0F,EAAmC,GACrC1F,IACF0F,EAAYC,gBAAZ,OAAqC3F,EAArC,KAEE8E,EAAM7E,QACRyF,EAAYE,UAAZ,SAGF,IAAMC,EAAaf,EAAMe,YAAc,gBACjC9F,EAAY+E,EAAM/E,WAAa,GAC/B6D,EAAkBiC,EAAWC,QAAQ,IAAnB,KAA6B/F,EAA7B,KAElBgG,EAAYjB,EAAMkB,SAAW,YAAc,aAG3CjF,EAAU,OADI+D,EAAM7E,MAAQ,EAAI,GAGtC,OACE,yBAAKJ,UAAU,YAAYM,MAAOuF,GAChC,yBACE7F,UAAS,OAASkB,EAAT,IAAoBgF,EAC7B5F,MAAO,CACLyD,kBACAgC,UAAWd,EAAM7E,MAAQ,aAAUgG,IAGrC,yBACEpG,UAAS,UAAYkB,EACrBZ,MAAO,CAAE+F,UAAWpB,EAAM7E,MAAQ,aAAUgG,IAE5C,yBAAKpG,UAAS,QAAUkB,EAAV,QAA0B0E","file":"component---src-pages-food-security-tsx-a733cb460ce89a1ef459.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/ben-den-engelsen-8aVLLbr1HxI-unsplash-9ee70473f85299121d1c331eeb6d239c.jpg\";","import React from 'react'\nimport BannerRow from '../Rows/BannerRow'\n\nexport interface StoryHeaderProps {\n  imageSrc: string\n  intro: React.ReactNode\n  lead: React.ReactNode\n  title: string\n}\n\nconst StoryHeader = ({\n  imageSrc,\n  title,\n  lead,\n  intro\n}: StoryHeaderProps): JSX.Element => {\n  return (\n    <div className=\"StoryHeader\">\n      <BannerRow bgOpacity={0.3} bgImage={imageSrc} short>\n        <a id=\"intro\" />\n        <div className=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\n          <p className=\"Cutout mb-5\">{title}</p>\n        </div>\n        <div className=\"w-100\" />\n        <div\n          className=\"lead col-12 col-md-8 offset-md-1 col-lg-6 offset-lg-2\"\n          style={{ textShadow: '0px 1px #000' }}\n        >\n          {lead}\n        </div>\n      </BannerRow>\n      <div className=\"Intro row mt-5\">\n        <div className=\"col-12 col-md-9 col-lg-6 offset-md-1 offset-lg-2\">\n          <p>{intro}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryHeader\n","import React from 'react'\nimport { useMapManager } from '../Data/MapLayerManager'\nimport LayerLabel from '../Map/Layers/LayerLabel'\n\nconst LayerLegend = (): JSX.Element => {\n  const { activeLayers } = useMapManager()\n\n  const activeLayerKeys = Object.keys(activeLayers).filter(\n    (layerKey) => activeLayers[layerKey] === true\n  )\n\n  return (\n    <div\n      className=\"LayerLegend\"\n      style={{\n        border: 'solid 1px #eee',\n        fontSize: '0.8rem',\n        padding: '0.5rem'\n      }}\n    >\n      {activeLayerKeys.map((layerKey: string) => (\n        <LayerLabel key={layerKey} layerId={layerKey} />\n      ))}\n    </div>\n  )\n}\n\nexport default LayerLegend\n","/* globals gsap, ScrollTrigger */\n\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport { MapLayerManagerProvider } from '../Data/MapLayerManager'\nimport LayerLegend from './LayerLegend'\nimport MapComponent from '../Map/Map'\n\nconst MAP_HEIGHT = 500\n\nexport interface StoryMapProps {\n  mapText: React.ReactNode\n  themeKey: string\n}\n\ninterface Props extends StoryMapProps {\n  storyRef: React.MutableRefObject<HTMLDivElement>\n}\n\nconst StoryMap = ({ mapText, themeKey, storyRef }: Props): JSX.Element => {\n  useEffect(() => gsap.registerPlugin(ScrollTrigger), [])\n\n  const [mapThemeKey, setMapThemeKey] = useState<string>()\n\n  const mapRef = useRef(null)\n\n  useEffect(() => {\n    // TODO: make the map zoom slower; show layers first, then zoom\n    const element = mapRef.current\n    gsap.fromTo(\n      element.querySelector('.MapText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.MapTableau'),\n\n          start: 'top top', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n\n          onEnter: (): void => {\n            setMapThemeKey(themeKey)\n          }\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger)\n    // MAP EFFECT scrollspy\n\n    const element = storyRef.current\n    gsap.fromTo(\n      element.querySelector('.MapText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.MapTableau'),\n          endTrigger: element.querySelector('.MapText'),\n          start: 'top 80px', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n          pin: element.querySelector('.MapTableau'),\n          // pinReparent: true,\n\n          onUpdate: (scrollTrigger): void => {\n            if (mapRef.current) {\n              const progress = scrollTrigger.progress\n\n              mapRef.current.scrollTop =\n                progress *\n                (mapRef.current.scrollHeight - mapRef.current.offsetHeight)\n            }\n          }\n        }\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"StoryMap row my-5\" id=\"map\">\n      <div className=\"col-12\">\n        <div className=\"MapTableau\">\n          <MapLayerManagerProvider>\n            <div\n              style={{\n                pointerEvents: 'none',\n                borderRadius: 0,\n                border: 'solid 1px #333',\n                height: `${MAP_HEIGHT + 2}px`\n              }}\n            >\n              <MapComponent\n                colWidth={12}\n                themeKey={mapThemeKey}\n                lockTheme\n                mapHeightOverride={MAP_HEIGHT}\n              />\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-4 col-sm-2 offset-sm-1\">\n                <LayerLegend />\n              </div>\n              <div\n                ref={mapRef}\n                className=\"MapText col-8 col-sm-6 offset-sm-1\"\n                style={{\n                  backgroundColor: '#fff',\n                  // width: '50vw',\n                  // marginLeft: '25vw',\n                  height: '30vw',\n                  overflowY: 'hidden'\n                }}\n              >\n                {mapText}\n              </div>\n            </div>\n          </MapLayerManagerProvider>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryMap\n","import React from 'react'\n\nimport { useNarrative } from './NarrativeContext'\n\nconst NarrativeToggleButtons = (): JSX.Element => {\n  const { showRain, toggleRain, showSurge, toggleSurge } = useNarrative()\n\n  return (\n    <div className=\"NarrativeToggleButtons\">\n      <button\n        className={`w-100 btn btn-sm ${\n          showRain ? 'btn-primary' : 'btn-outline-primary'\n        }`}\n        onClick={() => toggleRain()}\n      >\n        <i className=\"fas fa-cloud-showers-heavy mr-2\" />\n        {showRain ? 'Stop rain' : 'Start rain'}\n      </button>\n      <br />\n      <button\n        className={`w-100 btn btn-sm ${\n          showSurge ? 'btn-primary' : 'btn-outline-primary'\n        } mt-1`}\n        onClick={() => toggleSurge()}\n      >\n        <i className=\"fas fa-wind mr-2\" />\n        {showSurge ? 'Stop storm' : 'Start storm'}\n      </button>\n    </div>\n  )\n}\n\nexport default NarrativeToggleButtons\n","/* globals gsap, ScrollTrigger */\n\nimport React, { useEffect, useRef } from 'react'\n\nimport { NarrativeType } from '../../@types/NarrativeType'\nimport { useNarrative } from '../Narratives/NarrativeContext'\nimport NarrativeToggleButtons from '../Narratives/NarrativeToggleButtons'\nimport Tableau from '../Narratives/Tableau'\n\nexport interface StoryNarrativeProps {\n  activeNarrative: NarrativeType\n  narrativeText?: React.ReactNode\n}\n\ninterface Props extends StoryNarrativeProps {\n  storyRef: React.MutableRefObject<HTMLDivElement>\n}\n\nconst StoryNarrative = ({\n  activeNarrative,\n  narrativeText,\n  storyRef\n}: Props): JSX.Element => {\n  useEffect(() => gsap.registerPlugin(ScrollTrigger), [])\n\n  const { setNarrativeStage } = useNarrative()\n\n  const narrativeRef = useRef(null)\n\n  useEffect(() => {\n    const element = storyRef.current\n    gsap.fromTo(\n      element.querySelector('.NarrText'),\n      {\n        autoAlpha: 1\n      },\n      {\n        autoAlpha: 1,\n        scrollTrigger: {\n          trigger: element.querySelector('.NarrTableau'),\n          endTrigger: element.querySelector('.NarrText'),\n          start: 'top 80px', // element, viewport\n          end: 'bottom center',\n          // scrub: true,\n          // markers: true,\n          pin: element.querySelector('.NarrTableau'),\n          // pinReparent: true,\n\n          onUpdate: (scrollTrigger): void => {\n            if (narrativeRef.current) {\n              const progress = scrollTrigger.progress\n\n              narrativeRef.current.scrollTop =\n                progress *\n                (narrativeRef.current.scrollHeight -\n                  narrativeRef.current.offsetHeight)\n\n              if (progress < 1 / 3) {\n                setNarrativeStage(0)\n              } else if (progress < 2 / 3) {\n                setNarrativeStage(1)\n              } else {\n                setNarrativeStage(2)\n              }\n            }\n          }\n        }\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"StoryNarrative row my-5\">\n      <div className=\"col-12\">\n        <div className=\"NarrTableau\" style={{ backgroundColor: '#fff' }}>\n          <Tableau activeNarrative={activeNarrative} />\n          <div className=\"row mt-3\">\n            <div className=\"col-4 col-sm-2 offset-sm-1\">\n              <div\n                className=\"LayerLegend\"\n                style={{\n                  border: 'solid 1px #eee',\n                  fontSize: '0.8rem',\n                  padding: '0.5rem'\n                }}\n              >\n                <NarrativeToggleButtons />\n              </div>\n            </div>\n            <div\n              ref={narrativeRef}\n              className=\"NarrText col-sm-6 offset-sm-1 col-8\"\n              style={{\n                backgroundColor: '#fff',\n                // width: '50vw',\n                // marginLeft: '25vw',\n                height: '30vw',\n                overflowY: 'hidden'\n              }}\n            >\n              {narrativeText}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Make the image static and cover the width of the screen; as we scroll, we update the narrative image */}\n    </div>\n  )\n}\n\nexport default StoryNarrative\n","import React from 'react'\nimport Subhead from '../Layout/Subhead'\n\nconst StoryResources = (): JSX.Element => {\n  return (\n    <div className=\"row my-5\" style={{ height: '500px' }}>\n      <div className=\"col-8 offset-2\" id=\"resources\">\n        <Subhead>Resources</Subhead>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryResources\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useRef } from 'react'\n\n// import JumpTo from './JumpTo'\nimport SEO from '../SEO'\nimport StoryHeader, { StoryHeaderProps } from './StoryHeader'\nimport StoryMap, { StoryMapProps } from './StoryMap'\nimport StoryNarrative, { StoryNarrativeProps } from './StoryNarrative'\nimport StoryResources from './StoryResources'\n\nimport './Story.scss'\n\ninterface Props extends StoryHeaderProps, StoryMapProps, StoryNarrativeProps {\n  path: string\n}\n\nconst Story = (props: Props): JSX.Element => {\n  const storyRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <div className=\"Story\" ref={storyRef}>\n      <SEO title=\"Story\" />\n      {/* <JumpTo path={path} /> */}\n      <StoryHeader {...props} />\n      <StoryMap storyRef={storyRef} {...props} />\n      <StoryNarrative storyRef={storyRef} {...props} />\n      <StoryResources />\n    </div>\n  )\n}\n\nexport default Story\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBackground\":\"#142328\"};","import { graphql } from 'gatsby'\nimport React from 'react'\n\nimport { NarrativeType } from '../@types/NarrativeType'\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Layout from '../components/Layout/Layout'\nimport Story from '../components/Stories/Story'\n\nimport './Story.scss'\nimport image from '../../content/assets/images/ben-den-engelsen-8aVLLbr1HxI-unsplash.jpg'\n\nconst FoodSecurity = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <Story\n        title={'Food Security'}\n        imageSrc={image}\n        lead={\n          <>\n            Maecenas ornare, dui eget elementum ultrices, lectus augue tempor\n            tellus, a auctor velit ex a lectus. Phasellus lectus lectus, congue\n            ut dolor a, tincidunt maximus nulla. Integer risus sem, varius sit\n            amet sollicitudin a, condimentum vitae justo. Aliquam viverra nisi\n            magna, vestibulum pharetra quam pulvinar nec. Maecenas non augue\n            pharetra, congue purus vitae, maximus sapien. Lorem ipsum dolor sit\n            amet, consectetur adipiscing elit. Maecenas id turpis id neque\n            ullamcorper vehicula laoreet non dolor. Duis aliquam in orci at\n            egestas.\n          </>\n        }\n        intro={\n          <>\n            Maecenas ornare, dui eget elementum ultrices, lectus augue tempor\n            tellus, a auctor velit ex a lectus. Phasellus lectus lectus, congue\n            ut dolor a, tincidunt maximus nulla. Integer risus sem, varius sit\n            amet sollicitudin a, condimentum vitae justo. Aliquam viverra nisi\n            magna, vestibulum pharetra quam pulvinar nec. Maecenas non augue\n            pharetra, congue purus vitae, maximus sapien. Lorem ipsum dolor sit\n            amet, consectetur adipiscing elit. Maecenas id turpis id neque\n            ullamcorper vehicula laoreet non dolor. Duis aliquam in orci at\n            egestas.\n          </>\n        }\n        mapText={\n          <>\n            <p>\n              The Lower Mainland is an important agricultural and food-producing\n              region, generating more than 60% of British Columbia’s gross farm\n              receipts on just 1.6% of its total land base. This area is home to\n              68% of dairy operations and 80% of poultry operations in the\n              province. The region is also known for its cranberry production,\n              accounting for 92% of the cranberries in B.C. and 48% of all\n              cranberries in Canada. Moreover, B.C. has become the largest\n              producer of highbush blueberries in the world, with most of its\n              production concentrated in the Fraser River Delta.{' '}\n            </p>\n\n            <p>\n              As part of the Agricultural Land Reserve, a land-protection\n              program adopted in 1973, agricultural land is protected from\n              encroaching urbanization and industry. However, a significant\n              percentage of agricultural land in the region is located within\n              floodplains. Increased flood risks and salination from rising sea\n              levels pose significant concerns to hundreds of farming operations\n              in the region. With less than 5% of the province’s land base\n              considered arable, developing flood protection measures as well as\n              testing alternative farming practices are critical to maintaining\n              the agricultural sector in the province.{' '}\n            </p>\n          </>\n        }\n        narrativeText={\n          <>\n            <p>\n              Coastal habitats adapt to environmental and climate change, e.g.,\n              sea-level rise by migrating inland to retain their relative\n              function and structure. Coastal squeeze occurs where coastal\n              armoring or other barriers prevent this natural migration creating\n              fixed margins between the land and sea.1, 2 Coastal squeeze may\n              lead to the loss of intertidal habitats or even entire intertidal\n              zones. The rate at which the loss takes place is dependent on\n              factors such as the geographical formation of the coast. 1{' '}\n            </p>\n\n            <p>\n              Coastal armoring changes the natural dynamics of shoreline\n              sediment transport. In coastal and riverine areas, sustained\n              sediment supplies are important for maintaining shoreline position\n              and for offsetting surface subsidence. Surface subsidence is the\n              decline in surface elevation due to the loss of sediment deposits.\n              3 Trapped behind sea defense systems, wetlands, mangrove, and\n              marshes become increasingly vulnerable to accelerated surface\n              subsidence, erosion, and decline. 4\n            </p>\n\n            <p>\n              Subsidence may also occur due to different forms of underground\n              failure.3,8 In many areas, large tracks of wetlands have been\n              converted to agricultural use. 5 that have been protected behind\n              coastal defense structures such as flood banks.6 Supporting such\n              agricultural enterprises has meat adopting irrigation practices\n              that involve extracting potable water from deep underground\n              aquifers. This leads to groundwater fluxes, saltwater intrusion,\n              and deep subsidence. 7 This process is manifested on the surface\n              of agricultural lands as tilting, sinking, and slumping of the\n              soil surface. Deep subsidence has also been attributed to tectonic\n              activity and deep basin processes that have destroyed agriculture\n              infrastructure. 8,9\n            </p>\n          </>\n        }\n        themeKey={'foodSecurity'}\n        activeNarrative={NarrativeType.FoodSecurity}\n        path={'food-security'}\n      />\n    </Layout>\n  )\n}\n\nexport default FoodSecurity\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './BannerRow.scss'\n\ninterface Props {\n  bgColorRGB?: string\n  bgImage: string\n  bgOpacity?: number\n  children: React.ReactNode\n  textDark?: boolean\n  short?: boolean\n}\n\nconst BannerRow = (props: Props): JSX.Element => {\n  const { children } = props\n\n  const bgImage = props.bgImage\n  const bannerStyle: React.CSSProperties = {}\n  if (bgImage) {\n    bannerStyle.backgroundImage = `url(${bgImage})`\n  }\n  if (props.short) {\n    bannerStyle.minHeight = `100vh`\n  }\n\n  const bgColorRGB = props.bgColorRGB || 'rgba(0, 0, 0)'\n  const bgOpacity = props.bgOpacity || 0.5\n  const backgroundColor = bgColorRGB.replace(')', `, ${bgOpacity})`)\n\n  const textColor = props.textDark ? 'text-dark' : 'text-light'\n\n  const paddingSize = props.short ? 4 : 5\n  const padding = `py-${paddingSize}`\n\n  return (\n    <div className=\"BannerRow\" style={bannerStyle}>\n      <div\n        className={`row ${padding} ${textColor}`}\n        style={{\n          backgroundColor,\n          minHeight: props.short ? '100vh' : undefined\n        }}\n      >\n        <div\n          className={`col-12 ${padding}`}\n          style={{ marginTop: props.short ? '100px' : undefined }}\n        >\n          <div className={`my-0 ${padding} row`}>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BannerRow\n"],"sourceRoot":""}