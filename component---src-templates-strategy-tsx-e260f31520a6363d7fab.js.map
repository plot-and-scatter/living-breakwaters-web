{"version":3,"sources":["webpack:///./src/components/Strategies/StrategyCard.tsx","webpack:///./src/components/Strategies/StrategyFilter.tsx","webpack:///./src/pages/strategies.tsx","webpack:///./src/components/Layout/Title.tsx","webpack:///./src/components/Layout/Header.tsx","webpack:///./src/components/Strategies/StrategyCitations.tsx","webpack:///./src/components/Strategies/HowItWorks.tsx","webpack:///./src/components/Strategies/StrategyGallery.tsx","webpack:///./src/components/Strategies/StrategyItemList.tsx","webpack:///./src/components/Strategies/StrategyProjects.tsx","webpack:///./src/components/Strategies/StrategySummary.tsx","webpack:///./src/components/Strategies/StrategyDetail.tsx","webpack:///./src/templates/StrategyDropdown.tsx","webpack:///./src/templates/StrategySelect.tsx","webpack:///./src/templates/Strategy.tsx"],"names":["StrategyCard","strategy","strategyType","frontmatter","strategyTypes","color","colorForStrategy","className","to","fields","slug","style","title","excerpt","StrategyFilter","checkboxCallback","filters","map","key","type","id","value","onChange","defaultChecked","includes","htmlFor","labelName","pageQuery","Strategies","props","data","strategies","allMarkdownRemark","edges","useState","setFilters","filteredStrategies","filter","strategyNode","node","useCallback","event","newFilters","target","checked","push","indexOfItem","indexOf","splice","useEffect","console","log","siteTitle","site","siteMetadata","Layout","location","SEO","Header","Title","headingGroup","index","children","StrategyCitations","citationHTML","dangerouslySetInnerHTML","__html","HowItWorks","images","useLayoutEffect","$","carousel","data-interval","data-target","data-slide-to","src","childImageSharp","fluid","href","role","data-slide","aria-hidden","StrategyGallery","imageHtml","StrategyItemList","iconName","listHTML","StrategyProjects","examples","exampleHtml","StrategySummary","summaryHTML","StrategyDetail","pageContext","subpages","summary","allFile","nodes","types","toLowerCase","benefits","challenges","StrategyDropdown","active","label","colorClass","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","StrategySelect","currentPost","s","Strategy","post","markdownRemark","description","html"],"mappings":"uRAwCeA,G,UA5BM,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,SAChBC,EAAeD,EAASE,YAAYC,cACpCC,EAAQC,EAAiBJ,GAC/B,OACE,yBAAKK,UAAS,4BAA8BF,GAC1C,yBAAKE,UAAS,yBAA2BF,GACvC,kBAAC,OAAD,CAAMG,GAAIP,EAASQ,OAAOC,KAAMC,MAAO,CAAEN,MAAO,UAC9C,wBAAIE,UAAU,QAAQN,EAASE,YAAYS,OAC3C,wBAAIL,UAAU,QACZ,+BAAQL,MAId,yBAAKK,UAAU,aACb,2BAAIN,EAASE,YAAYU,SACzB,uBAAGN,UAAU,mBACX,kBAAC,OAAD,CACEC,GAAIP,EAASQ,OAAOC,KACpBH,UAAS,0BAA4BF,GAFvC,qBCgBKS,EAlCQ,SAAC,GAAsD,IAApDC,EAAoD,EAApDA,iBAAkBC,EAAkC,EAAlCA,QAC1C,OACE,yBAAKT,UAAU,mCACb,yBAAKA,UAAU,iDACb,wBAAIA,UAAU,wBAAd,oBACCH,EAAca,KAAI,SAACf,GAClB,IAAMG,EAAQC,EAAiBJ,GAC/B,OACE,yBACEgB,IAAKhB,EACLK,UAAS,wDAA0DF,EAA1D,SAAwEA,GAEjF,2BACEE,UAAU,mBACVY,KAAK,WACLC,GAAE,kBAAoBlB,EACtBmB,MAAOnB,EACPoB,SAAUP,EACVQ,eAAgBP,EAAQQ,SAAStB,KAEnC,2BACEK,UAAU,mBACVkB,QAAO,kBAAoBvB,GAE1BA,U,weCpBV,IAAME,EAAgB,CAAC,UAAW,cAAe,UAAW,SAEtDE,EAAmB,SAACoB,GAC/B,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,cACH,MAAO,UACT,IAAK,UACH,MAAO,SACT,IAAK,QACH,MAAO,OACT,QACE,MAAO,cA2DAC,GAPEC,UAhDI,SAACC,GAAqC,IAC/CC,EAASD,EAATC,KAEFC,EAAaD,EAAKE,kBAAkBC,MAHa,EAKzBC,mBAAQ,UAAqB9B,IAApDY,EALgD,KAKvCmB,EALuC,KAOjDC,EAAqBL,EAAWM,QAAO,SAACC,GAAD,OAC3CtB,EAAQQ,SAASc,EAAaC,KAAKpC,YAAYC,kBAG3CW,EAAmByB,uBACvB,SAACC,GACC,IAAMC,EAAa,EAAI1B,GACjBK,EAAQoB,EAAME,OAAOtB,MAC3B,GAAIoB,EAAME,OAAOC,QACfF,EAAWG,KAAKxB,OACX,CACL,IAAMyB,EAAcJ,EAAWK,QAAQ1B,GACvCqB,EAAWM,OAAOF,EAAa,GAEjCX,EAAWO,KAEb,CAAC1B,IAGHiC,qBAAU,WACRC,QAAQC,IAAInC,KACX,CAACA,IAEJ,IAAMoC,EAAYtB,EAAKuB,KAAKC,aAAa1C,MACzC,OACE,kBAAC2C,EAAA,EAAD,CAAQC,SAAU3B,EAAM2B,SAAU5C,MAAOwC,GACvC,kBAACK,EAAA,EAAD,CAAK7C,MAAM,eACX,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAa,eACpB,kBAAC,EAAD,CAAgB7C,iBAAkBA,EAAkBC,QAASA,KAE/D,yBAAKT,UAAU,mCACZ6B,EAAmBnB,KAAI,SAACqB,EAAcuB,GACrC,IAAM5D,EAAWqC,EAAaC,KAC9B,OAAO,kBAAC,EAAD,CAAcrB,IAAK2C,EAAO5D,SAAUA,UAc5B,e,kCCtFzB,mCAuBe0D,IAdD,SAAC,GAAgD,IAA9CC,EAA8C,EAA9CA,aAAchD,EAAgC,EAAhCA,MAC7B,OACE,yBAAKL,UAAU,oBACb,4BACE,0BAAMA,UAAS,iBAAkBK,EAAQ,QAAU,KAChDgD,EACAhD,GAAS,2CAEXA,M,kCCjBT,mCAce8C,IANA,SAAC,GAAqC,IAAnCI,EAAmC,EAAnCA,SAChB,OACE,yBAAKvD,UAAU,6CAA6CuD,K,0FCSjDC,G,UATW,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,aAC3B,OACE,yBAAKzD,UAAU,kBACb,yCACA,yBAAK0D,wBAAyB,CAAEC,OAAQF,QCmE/BG,G,UAtEI,SAAC,GAAmC,IAAjCC,EAAiC,EAAjCA,OAKpB,OAJAC,2BAAgB,WACZC,EAAE,wBAAyCC,aAC5C,IAGD,yBAAKhE,UAAU,iCACb,4CAEA,yBACEa,GAAG,sBACHb,UAAU,+BAEViE,gBAAe,KAEf,wBAAIjE,UAAU,uBACX6D,EAAOnD,KAAI,SAACsB,EAAMsB,GACjB,OACE,wBACE3C,IAAK2C,EACLY,cAAY,uBACZC,gBAAeb,QAKvB,yBAAKtD,UAAU,kBACZ6D,EAAOnD,KAAI,SAACsB,EAAMsB,GACjB,OACE,yBACE3C,IAAK2C,EACLtD,UAAS,kBAA6B,IAAVsD,EAAc,UAAY,KAEtD,yBACEtD,UAAU,gBACVoE,IAAKpC,EAAKqC,gBAAgBC,MAAMF,WAM1C,uBACEpE,UAAU,wBACVuE,KAAK,uBACLC,KAAK,SACLC,aAAW,QAEX,0BACEzE,UAAU,6BACV0E,cAAY,SAEd,0BAAM1E,UAAU,WAAhB,aAEF,uBACEA,UAAU,wBACVuE,KAAK,uBACLC,KAAK,SACLC,aAAW,QAEX,0BACEzE,UAAU,6BACV0E,cAAY,SAEd,0BAAM1E,UAAU,WAAhB,aC3CK2E,EAxBS,SAAC,GAAmC,IAAjCd,EAAiC,EAAjCA,OACzB,OACE,yBAAK7D,UAAU,cACb,yBAAKA,UAAU,mBACb,4BACE,uBAAGA,UAAU,uBADf,aAKD6D,GACCA,EAAOnD,KAAI,SAACkE,EAAWtB,GACrB,OACE,yBAAKtD,UAAU,SAASW,IAAK2C,GAC3B,yBACEtD,UAAU,QACV0D,wBAAyB,CAAEC,OAAQiB,WCSpCC,EArBU,SAAC,GAKA,IAJxBC,EAIwB,EAJxBA,SACAC,EAGwB,EAHxBA,SACA1E,EAEwB,EAFxBA,MACAO,EACwB,EADxBA,KAEA,OACE,yBAAKZ,UAAS,aAAeY,GAC3B,4BACGkE,GAAY,uBAAG9E,UAAS,UAAY8E,EAAZ,UACxBzE,GAEH,yBACEqD,wBAAyB,CACvBC,OAAQoB,OCSHC,EA1BU,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,SAC1B,OACE,yBAAKjF,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,4BACE,uBAAGA,UAAU,sBADf,sBAKDiF,GACCA,EAASvE,KAAI,SAACwE,EAAa5B,GACzB,OACE,yBAAKtD,UAAU,MAAMW,IAAK2C,GACxB,yBACEtD,UAAU,UACV0D,wBAAyB,CAAEC,OAAQuB,YCLtCC,G,UARS,SAAC,GAAsD,IAApDxF,EAAoD,EAApDA,aAAcyF,EAAsC,EAAtCA,YACvC,OACE,yBAAKpF,UAAS,6BAA+BL,EAA/B,MACZ,yBAAK+D,wBAAyB,CAAEC,OAAQyB,QC4C/BC,EA1CQ,SAAC,GAIE,IAHxB9D,EAGwB,EAHxBA,KACA3B,EAEwB,EAFxBA,YACA0F,EACwB,EADxBA,YAEMzF,EAAgBD,EAAYC,cAElC,OACE,yBAAKG,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEL,aAAcE,EACduF,YAAaE,EAAYC,SAASC,UAEpC,kBAAC,EAAD,CAAY3B,OAAQtC,EAAKkE,QAAQC,QACjC,kBAAC,EAAD,CACEX,SAAUO,EAAYC,SAASI,MAC/BtF,MAAK,YAAcT,EAAYS,MAAMuF,cACrChF,KAAM,UAER,kBAAC,EAAD,CACEkE,SAAU,QACVC,SAAUO,EAAYC,SAASM,SAC/BxF,MAAO,WACPO,KAAM,aAER,kBAAC,EAAD,CACEkE,SAAU,QACVC,SAAUO,EAAYC,SAASO,WAC/BzF,MAAO,aACPO,KAAM,gBAIV,yBAAKZ,UAAU,gBACb,kBAAC,EAAD,CAAkBiF,SAAUK,EAAYC,SAASN,WACjD,kBAAC,EAAD,CAAiBpB,OAAQyB,EAAYC,SAAS1B,Y,wBCJvCkC,EArCU,SAAC,GAIA,IAHxBC,EAGwB,EAHxBA,OACAC,EAEwB,EAFxBA,MACAzE,EACwB,EADxBA,WAEM0E,EAAaF,EAASjG,2BAAiBkG,GAAS,YACtD,OACE,yBAAKjG,UAAU,kCACb,4BACEA,UAAS,2BAA6BkG,EACtCtF,KAAK,SACLC,GAAG,qBACHsF,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdjG,MAAO,CAAEN,MAAO,UAEfmG,GAEH,yBAAKjG,UAAU,gBAAgBsG,kBAAgB,sBAC5C9E,EAAWd,KAAI,SAACqB,EAAcuB,GAC7B,IAAM5D,EAAWqC,EAAaC,KAC9B,OACE,kBAAC,OAAD,CACErB,IAAK2C,EACLtD,UAAU,gBACVC,GAAIP,EAASQ,OAAOC,MAEnBT,EAASE,YAAYS,aCHrBkG,G,UAvBQ,SAAC,GAAoD,IAAlDC,EAAkD,EAAlDA,YAAahF,EAAqC,EAArCA,WAIrC,OAHAmB,QAAQC,IAAI,aAAcpB,GAC1BmB,QAAQC,IAAI4D,GAGV,yBAAKxG,UAAU,yBACZH,gBAAca,KAAI,SAACf,EAAc2D,GAChC,IAAMzB,EAAqBL,EAAWM,QACpC,SAAC2E,GAAD,OAAOA,EAAEzE,KAAKpC,YAAYC,gBAAkBF,KAE9C,OACE,kBAAC,EAAD,CACEqG,OAAQQ,EAAY5G,YAAYC,gBAAkBF,EAClDgB,IAAK2C,EACL2C,MAAOtG,EACP6B,WAAYK,U,oCC1BxB,0CAqEe6E,UAxDE,SAACpF,GAChB,IAAMqF,EAAOrF,EAAMC,KAAKqF,eAClB/D,EAAYvB,EAAMC,KAAKuB,KAAKC,aAAa1C,MAE/C,OACE,kBAAC2C,EAAA,EAAD,CAAQC,SAAU3B,EAAM2B,SAAU5C,MAAOwC,GACvC,kBAACK,EAAA,EAAD,CACE7C,MAAOsG,EAAK/G,YAAYS,MACxBwG,YAAaF,EAAK/G,YAAYiH,aAAeF,EAAKrG,UAEpD,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAc,WAAYhD,MAAOsG,EAAK/G,YAAYS,QACzD,yBAAKL,UAAU,SACb,kBAAC,EAAD,CACEwG,YAAaG,EACbnF,WAAYF,EAAMC,KAAKE,kBAAkBC,UAI/C,yBAAK1B,UAAU,cACb,kBAAC,EAAD,CACEuB,KAAMD,EAAMC,KACZ3B,YAAa+G,EAAK/G,YAClB0F,YAAahE,EAAMgE,cAErB,kBAAC,EAAD,CAAmB7B,aAAckD,EAAKG,UAzB9C,IA0Da1F,EAAY","file":"component---src-templates-strategy-tsx-e260f31520a6363d7fab.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport { colorForStrategy } from '../../pages/strategies'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCard.scss'\n\ninterface Props {\n  strategy: FixTypeLater\n}\n\nconst StrategyCard = ({ strategy }: Props): JSX.Element => {\n  const strategyType = strategy.frontmatter.strategyTypes\n  const color = colorForStrategy(strategyType)\n  return (\n    <div className={`StrategyCard card border-${color}`}>\n      <div className={`d-flex card-header bg-${color}`}>\n        <Link to={strategy.fields.slug} style={{ color: 'white' }}>\n          <h5 className=\"mb-0\">{strategy.frontmatter.title}</h5>\n          <h6 className=\"mb-0\">\n            <small>{strategyType}</small>\n          </h6>\n        </Link>\n      </div>\n      <div className=\"card-body\">\n        <p>{strategy.frontmatter.excerpt}</p>\n        <p className=\"mb-0 text-right\">\n          <Link\n            to={strategy.fields.slug}\n            className={`btn btn-sm btn-outline-${color}`}\n          >\n            Learn more &rarr;\n          </Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyCard\n","import { colorForStrategy, strategyTypes } from '../../pages/strategies'\nimport React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  checkboxCallback: (event: FixTypeLater) => void\n  filters: FixTypeLater[]\n}\n\nconst StrategyFilter = ({ checkboxCallback, filters }: Props): JSX.Element => {\n  return (\n    <div className=\"StrategyFilter col-6 text-right\">\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <h5 className=\"text-muted mr-3 mb-0\">Show strategies:</h5>\n        {strategyTypes.map((strategyType) => {\n          const color = colorForStrategy(strategyType)\n          return (\n            <div\n              key={strategyType}\n              className={`py-1 px-2 form-check form-check-inline border border-${color} text-${color}`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id={`InlineCheckbox-${strategyType}`}\n                value={strategyType}\n                onChange={checkboxCallback}\n                defaultChecked={filters.includes(strategyType)}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor={`InlineCheckbox-${strategyType}`}\n              >\n                {strategyType}\n              </label>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyFilter\n","import { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport FixTypeLater from '../@types/FixTypeLater'\nimport Header from '../components/Layout/Header'\nimport Layout from '../components/Layout/Layout'\nimport Title from '../components/Layout/Title'\nimport SEO from '../components/SEO'\nimport StrategyCard from '../components/Strategies/StrategyCard'\nimport StrategyFilter from '../components/Strategies/StrategyFilter'\n\nimport './Strategies.scss'\n\nexport const strategyTypes = ['Protect', 'Accommodate', 'Retreat', 'Avoid']\n\nexport const colorForStrategy = (labelName: string): string => {\n  switch (labelName) {\n    case 'Protect':\n      return 'primary'\n    case 'Accommodate':\n      return 'warning'\n    case 'Retreat':\n      return 'danger'\n    case 'Avoid':\n      return 'info'\n    default:\n      return 'secondary'\n  }\n}\n\nconst Strategies = (props: FixTypeLater): JSX.Element => {\n  const { data } = props\n\n  const strategies = data.allMarkdownRemark.edges\n\n  const [filters, setFilters] = useState<FixTypeLater[]>([...strategyTypes])\n\n  const filteredStrategies = strategies.filter((strategyNode) =>\n    filters.includes(strategyNode.node.frontmatter.strategyTypes)\n  )\n\n  const checkboxCallback = useCallback(\n    (event) => {\n      const newFilters = [...filters]\n      const value = event.target.value\n      if (event.target.checked) {\n        newFilters.push(value)\n      } else {\n        const indexOfItem = newFilters.indexOf(value)\n        newFilters.splice(indexOfItem, 1)\n      }\n      setFilters(newFilters)\n    },\n    [filters]\n  )\n\n  useEffect(() => {\n    console.log(filters)\n  }, [filters])\n\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Strategies\" />\n      <Header>\n        <Title headingGroup=\"Strategies\" />\n        <StrategyFilter checkboxCallback={checkboxCallback} filters={filters} />\n      </Header>\n      <div className=\"StrategyCards card-columns mt-3\">\n        {filteredStrategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return <StrategyCard key={index} strategy={strategy} />\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategies\n\nStrategies.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n            excerpt\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './Title.scss'\n\ninterface Props {\n  headingGroup: string\n  title?: string\n}\n\nconst Title = ({ headingGroup, title }: Props): JSX.Element => {\n  return (\n    <div className=\"Title py-2 col-6\">\n      <h1>\n        <span className={`HeadingGroup ${title ? 'Muted' : ''}`}>\n          {headingGroup}\n          {title && <>: </>}\n        </span>\n        {title}\n      </h1>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\n\nimport './Header.scss'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst Header = ({ children }: Props): JSX.Element => {\n  return (\n    <div className=\"Header shadow row align-items-center py-3\">{children}</div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategyCitations.scss'\n\ninterface Props {\n  citationHTML: FixTypeLater\n}\n\nconst StrategyCitations = ({ citationHTML }: Props): JSX.Element => {\n  return (\n    <div className=\"Citations my-5\">\n      <h2>Citations</h2>\n      <div dangerouslySetInnerHTML={{ __html: citationHTML }} />\n    </div>\n  )\n}\n\nexport default StrategyCitations\n","/* globals $ */\n\nimport React, { useLayoutEffect } from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './HowItWorks.scss'\n\ninterface Props {\n  images: FixTypeLater[]\n}\n\nconst HowItWorks = ({ images }: Props): JSX.Element => {\n  useLayoutEffect(() => {\n    ;($('#carouselExampleFade') as FixTypeLater).carousel()\n  }, [])\n\n  return (\n    <div className=\"Illustration HowItWorks col-8\">\n      <h2>How it works</h2>\n\n      <div\n        id=\"carouselExampleFade\"\n        className=\"carousel slide carousel-fade\"\n        // data-ride=\"carousel\"\n        data-interval={2000}\n      >\n        <ol className=\"carousel-indicators\">\n          {images.map((node, index) => {\n            return (\n              <li\n                key={index}\n                data-target=\"#carouselExampleFade\"\n                data-slide-to={index}\n              ></li>\n            )\n          })}\n        </ol>\n        <div className=\"carousel-inner\">\n          {images.map((node, index) => {\n            return (\n              <div\n                key={index}\n                className={`carousel-item ${index === 0 ? ' active' : ''}`}\n              >\n                <img\n                  className=\"d-block w-100\"\n                  src={node.childImageSharp.fluid.src}\n                />\n              </div>\n            )\n          })}\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselExampleFade\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span\n            className=\"carousel-control-prev-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselExampleFade\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span\n            className=\"carousel-control-next-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  images: FixTypeLater[]\n}\n\nconst StrategyGallery = ({ images }: Props): JSX.Element => {\n  return (\n    <div className=\"col Images\">\n      <div className=\"row ImagesTitle\">\n        <h2>\n          <i className=\"fas fa-images mr-2\"></i> Gallery\n        </h2>\n      </div>\n\n      {images &&\n        images.map((imageHtml, index) => {\n          return (\n            <div className=\"col-12\" key={index}>\n              <div\n                className=\"Image\"\n                dangerouslySetInnerHTML={{ __html: imageHtml }}\n              />\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default StrategyGallery\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  iconName?: string\n  listHTML: FixTypeLater\n  title: string\n  type: string\n}\n\nconst StrategyItemList = ({\n  iconName,\n  listHTML,\n  title,\n  type\n}: Props): JSX.Element => {\n  return (\n    <div className={`col col-4 ${type}`}>\n      <h2>\n        {iconName && <i className={`fas fa-${iconName} mr-2`} />}\n        {title}\n      </h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: listHTML\n        }}\n      />\n    </div>\n  )\n}\n\nexport default StrategyItemList\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\ninterface Props {\n  examples: FixTypeLater[]\n}\n\nconst StrategyProjects = ({ examples }: Props): JSX.Element => {\n  return (\n    <div className=\"col-8 Examples\">\n      <div className=\"row\">\n        <div className=\"ExamplesTitle col-12\">\n          <h2>\n            <i className=\"fas fa-tools mr-2\"></i> Example projects\n          </h2>\n        </div>\n\n        {examples &&\n          examples.map((exampleHtml, index) => {\n            return (\n              <div className=\"col\" key={index}>\n                <div\n                  className=\"Example\"\n                  dangerouslySetInnerHTML={{ __html: exampleHtml }}\n                />\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyProjects\n","import React from 'react'\nimport FixTypeLater from '../../@types/FixTypeLater'\n\nimport './StrategySummary.scss'\n\ninterface Props {\n  strategyType: string\n  summaryHTML: FixTypeLater\n}\n\nconst StrategySummary = ({ strategyType, summaryHTML }: Props): JSX.Element => {\n  return (\n    <div className={`StrategySummary col col-4 ${strategyType}BG`}>\n      <div dangerouslySetInnerHTML={{ __html: summaryHTML }} />\n    </div>\n  )\n}\n\nexport default StrategySummary\n","import React from 'react'\n\nimport FixTypeLater from '../../@types/FixTypeLater'\nimport HowItWorks from './HowItWorks'\nimport StrategyGallery from './StrategyGallery'\nimport StrategyItemList from './StrategyItemList'\nimport StrategyProjects from './StrategyProjects'\nimport StrategySummary from './StrategySummary'\n\ninterface Props {\n  data: FixTypeLater\n  frontmatter: FixTypeLater\n  pageContext: FixTypeLater\n}\n\nconst StrategyDetail = ({\n  data,\n  frontmatter,\n  pageContext\n}: Props): JSX.Element => {\n  const strategyTypes = frontmatter.strategyTypes\n\n  return (\n    <div className=\"Post\">\n      <div className=\"row MoreInfo\">\n        <StrategySummary\n          strategyType={strategyTypes}\n          summaryHTML={pageContext.subpages.summary}\n        />\n        <HowItWorks images={data.allFile.nodes} />\n        <StrategyItemList\n          listHTML={pageContext.subpages.types}\n          title={`Types of ${frontmatter.title.toLowerCase()}`}\n          type={'Types'}\n        />\n        <StrategyItemList\n          iconName={'check'}\n          listHTML={pageContext.subpages.benefits}\n          title={'Benefits'}\n          type={'Benefits'}\n        />\n        <StrategyItemList\n          iconName={'times'}\n          listHTML={pageContext.subpages.challenges}\n          title={'Challenges'}\n          type={'Challenges'}\n        />\n      </div>\n\n      <div className=\"row BottomBG\">\n        <StrategyProjects examples={pageContext.subpages.examples} />\n        <StrategyGallery images={pageContext.subpages.images} />\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyDetail\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { colorForStrategy } from '../pages/strategies'\n\ninterface Props {\n  active?: boolean\n  label: string\n  strategies: any[]\n}\n\nconst StrategyDropdown = ({\n  active,\n  label,\n  strategies\n}: Props): JSX.Element => {\n  const colorClass = active ? colorForStrategy(label) : 'secondary'\n  return (\n    <div className=\"StrategyDropdown dropdown mr-3\">\n      <button\n        className={`btn dropdown-toggle btn-${colorClass}`}\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ color: 'white' }}\n      >\n        {label}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        {strategies.map((strategyNode, index) => {\n          const strategy = strategyNode.node\n          return (\n            <Link\n              key={index}\n              className=\"dropdown-item\"\n              to={strategy.fields.slug}\n            >\n              {strategy.frontmatter.title}\n            </Link>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default StrategyDropdown\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { strategyTypes } from '../pages/strategies'\nimport StrategyDropdown from './StrategyDropdown'\n\nimport './StrategySelect.scss'\n\ninterface Props {\n  currentPost: any\n  strategies: any[]\n}\n\nconst StrategySelect = ({ currentPost, strategies }: Props): JSX.Element => {\n  console.log('strategies', strategies)\n  console.log(currentPost)\n\n  return (\n    <div className=\"StrategySelect d-flex\">\n      {strategyTypes.map((strategyType, index) => {\n        const filteredStrategies = strategies.filter(\n          (s) => s.node.frontmatter.strategyTypes === strategyType\n        )\n        return (\n          <StrategyDropdown\n            active={currentPost.frontmatter.strategyTypes === strategyType}\n            key={index}\n            label={strategyType}\n            strategies={filteredStrategies}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StrategySelect\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { graphql } from 'gatsby'\nimport React from 'react'\n\nimport Layout from '../components/Layout/Layout'\nimport SEO from '../components/SEO'\nimport SitePageProps from '../@types/SitePageProps'\nimport StrategyCitations from '../components/Strategies/StrategyCitations'\nimport StrategyDetail from '../components/Strategies/StrategyDetail'\nimport StrategySelect from './StrategySelect'\n\nimport './Strategies.scss'\nimport Header from '../components/Layout/Header'\nimport Title from '../components/Layout/Title'\n\nconst Strategy = (props: SitePageProps): JSX.Element => {\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Header>\n        <Title headingGroup={'Strategy'} title={post.frontmatter.title} />\n        <div className=\"col-6\">\n          <StrategySelect\n            currentPost={post}\n            strategies={props.data.allMarkdownRemark.edges}\n          />\n        </div>\n      </Header>\n      <div className=\"Strategies\">\n        <StrategyDetail\n          data={props.data}\n          frontmatter={post.frontmatter}\n          pageContext={props.pageContext}\n        />\n        <StrategyCitations citationHTML={post.html} />\n        {/* <hr style={{ marginBottom: '1rem' }} />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul> */}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Strategy\n\nexport const pageQuery = graphql`\n  query StrategyBySlug($slug: String!, $animationSlug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allFile(filter: { absolutePath: { regex: $animationSlug } }) {\n      nodes {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            src\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        strategyTypes\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { contentType: { eq: \"strategy\" } } }\n      sort: { fields: [frontmatter___title], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            strategyTypes\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}