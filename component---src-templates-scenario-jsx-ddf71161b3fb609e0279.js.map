{"version":3,"sources":["webpack:///./src/templates/Scenario.jsx","webpack:///./src/helpers.js"],"names":["ScenarioTemplate","render","hex","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","console","log","frontmatter","common","brandBackground","replace","m","r","g","b","substring","match","map","x","parseInt","join","Layout","location","SEO","description","excerpt","style","marginTop","marginBottom","className","subtitle","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"wPAUMA,E,gLACJC,OAAA,WACE,ICXoBC,EDWdC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KASlB,OAPAC,QAAQC,IAAIb,EAAKc,aACjBF,QAAQC,IAAI,iBACZD,QAAQC,IAAIE,KACZH,QAAQC,IAAI,iBACZD,QAAQC,KCnBYd,EDmBCgB,IAAOC,gBClB9BjB,EACGkB,QACC,oCACA,SAACC,EAAGC,EAAGC,EAAGC,GAAV,MAAgB,IAAMF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,KAE3CC,UAAU,GACVC,MAAM,SACNC,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,QDWuBE,KAAK,OAClDf,QAAQC,MAGN,kBAACe,EAAA,EAAD,CAAQC,SAAU5B,KAAKC,MAAM2B,SAAUrB,MAAOH,GAC5C,kBAACyB,EAAA,EAAD,CACEtB,MAAOR,EAAKc,YAAYN,MACxBuB,YAAa/B,EAAKc,YAAYiB,aAAe/B,EAAKgC,UAEpD,wBACEC,MAAO,CACLC,UAAW,OACXC,aAAc,IAGfnC,EAAKc,YAAYN,OAEpB,wBAAI4B,UAAU,QAAQpC,EAAKc,YAAYuB,UACvC,uBACEJ,MAAO,CACLK,QAAQ,QACRH,aAAc,SAGfnC,EAAKc,YAAYyB,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQzC,EAAK0C,QAC7C,wBACET,MAAO,CACLE,aAAc,UAGlB,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGpC,GACC,kBAAC,OAAD,CAAMqC,GAAIrC,EAASsC,OAAOC,KAAMC,IAAI,QAApC,KACKxC,EAASI,YAAYN,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMoC,GAAIpC,EAAKqC,OAAOC,KAAMC,IAAI,QAC7BvC,EAAKG,YAAYN,MADpB,U,GA5DiB2C,IAAMC,WA+ExBC,GARExD,YAQO","file":"component---src-templates-scenario-jsx-ddf71161b3fb609e0279.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/Layout/Layout\"\nimport SEO from \"../components/SEO\"\n\nimport common from \"../scss/_common.scss\"\nimport { hexToRgb } from \"../helpers\"\n\nclass ScenarioTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    console.log(post.frontmatter)\n    console.log(\"-------------\")\n    console.log(common)\n    console.log(\"=============\")\n    console.log(hexToRgb(common.brandBackground).join(\", \"))\n    console.log()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: \"1rem\",\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <h2 className=\"my-3\">{post.frontmatter.subtitle}</h2>\n        <p\n          style={{\n            display: `block`,\n            marginBottom: \"1rem\",\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: \"1rem\",\n          }}\n        />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default ScenarioTemplate\n\nScenarioTemplate.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport const pageQuery = graphql`\n  query ScenarioBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// From https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nexport const hexToRgb = hex =>\n  hex\n    .replace(\n      /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n      (m, r, g, b) => \"#\" + r + r + g + g + b + b\n    )\n    .substring(1)\n    .match(/.{2}/g)\n    .map(x => parseInt(x, 16))\n"],"sourceRoot":""}