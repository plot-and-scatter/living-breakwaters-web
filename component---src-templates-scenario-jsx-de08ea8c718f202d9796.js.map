{"version":3,"sources":["webpack:///./src/templates/Scenario.jsx"],"names":["ScenarioTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","marginTop","marginBottom","className","subtitle","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"gNAUMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAIlB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKa,YAAYL,MACxBM,YAAad,EAAKa,YAAYC,aAAed,EAAKe,UAEpD,wBACEC,MAAO,CACLC,UAAW,OACXC,aAAc,IAGflB,EAAKa,YAAYL,OAEpB,wBAAIW,UAAU,QAAQnB,EAAKa,YAAYO,UACvC,uBACEJ,MAAO,CACLK,QAAQ,QACRH,aAAc,SAGflB,EAAKa,YAAYS,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQxB,EAAKyB,QAC7C,wBACET,MAAO,CACLE,aAAc,UAGlB,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGnB,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKE,YAAYL,MADpB,U,GAvDiB0B,IAAMC,WAkEtBrC,YAQR,IAAMsC,EAAS","file":"component---src-templates-scenario-jsx-de08ea8c718f202d9796.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/Layout/Layout\"\nimport SEO from \"../components/SEO\"\n\n// import common from \"../scss/_common.module.scss\"\n// import { hexToRgb } from \"../helpers\"\n\nclass ScenarioTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    // console.log(hexToRgb(common.brandBackground).join(\", \"))\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: \"1rem\",\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <h2 className=\"my-3\">{post.frontmatter.subtitle}</h2>\n        <p\n          style={{\n            display: `block`,\n            marginBottom: \"1rem\",\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: \"1rem\",\n          }}\n        />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default ScenarioTemplate\n\nScenarioTemplate.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport const pageQuery = graphql`\n  query ScenarioBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}